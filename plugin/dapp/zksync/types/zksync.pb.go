// Code generated by protoc-gen-go. DO NOT EDIT.
// source: zksync.proto

package types // import "github.com/33cn/plugin/plugin/dapp/zksync/types"

import proto "github.com/golang/protobuf/proto"
import fmt "fmt"
import math "math"
import types "github.com/33cn/chain33/types"

import (
	context "golang.org/x/net/context"
	grpc "google.golang.org/grpc"
)

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto.Marshal
var _ = fmt.Errorf
var _ = math.Inf

// This is a compile-time assertion to ensure that this generated file
// is compatible with the proto package it is being compiled against.
// A compilation error at this line likely means your copy of the
// proto package needs to be updated.
const _ = proto.ProtoPackageIsVersion2 // please upgrade the proto package

type ZksyncAction struct {
	// Types that are valid to be assigned to Value:
	//	*ZksyncAction_Deposit
	//	*ZksyncAction_Withdraw
	//	*ZksyncAction_ContractToTree
	//	*ZksyncAction_TreeToContract
	//	*ZksyncAction_Transfer
	//	*ZksyncAction_TransferToNew
	//	*ZksyncAction_ForceExit
	//	*ZksyncAction_SetPubKey
	//	*ZksyncAction_FullExit
	//	*ZksyncAction_Swap
	//	*ZksyncAction_SetVerifyKey
	//	*ZksyncAction_CommitProof
	//	*ZksyncAction_SetVerifier
	//	*ZksyncAction_SetFee
	//	*ZksyncAction_MintNFT
	//	*ZksyncAction_WithdrawNFT
	//	*ZksyncAction_TransferNFT
	Value                isZksyncAction_Value `protobuf_oneof:"value"`
	Ty                   int32                `protobuf:"varint,15,opt,name=ty,proto3" json:"ty,omitempty"`
	XXX_NoUnkeyedLiteral struct{}             `json:"-"`
	XXX_unrecognized     []byte               `json:"-"`
	XXX_sizecache        int32                `json:"-"`
}

func (m *ZksyncAction) Reset()         { *m = ZksyncAction{} }
func (m *ZksyncAction) String() string { return proto.CompactTextString(m) }
func (*ZksyncAction) ProtoMessage()    {}
func (*ZksyncAction) Descriptor() ([]byte, []int) {
	return fileDescriptor_zksync_95b070c4c0abad18, []int{0}
}
func (m *ZksyncAction) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_ZksyncAction.Unmarshal(m, b)
}
func (m *ZksyncAction) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_ZksyncAction.Marshal(b, m, deterministic)
}
func (dst *ZksyncAction) XXX_Merge(src proto.Message) {
	xxx_messageInfo_ZksyncAction.Merge(dst, src)
}
func (m *ZksyncAction) XXX_Size() int {
	return xxx_messageInfo_ZksyncAction.Size(m)
}
func (m *ZksyncAction) XXX_DiscardUnknown() {
	xxx_messageInfo_ZksyncAction.DiscardUnknown(m)
}

var xxx_messageInfo_ZksyncAction proto.InternalMessageInfo

type isZksyncAction_Value interface {
	isZksyncAction_Value()
}

type ZksyncAction_Deposit struct {
	Deposit *ZkDeposit `protobuf:"bytes,1,opt,name=deposit,proto3,oneof"`
}

type ZksyncAction_Withdraw struct {
	Withdraw *ZkWithdraw `protobuf:"bytes,2,opt,name=withdraw,proto3,oneof"`
}

type ZksyncAction_ContractToTree struct {
	ContractToTree *ZkContractToTree `protobuf:"bytes,3,opt,name=contractToTree,proto3,oneof"`
}

type ZksyncAction_TreeToContract struct {
	TreeToContract *ZkTreeToContract `protobuf:"bytes,4,opt,name=treeToContract,proto3,oneof"`
}

type ZksyncAction_Transfer struct {
	Transfer *ZkTransfer `protobuf:"bytes,5,opt,name=transfer,proto3,oneof"`
}

type ZksyncAction_TransferToNew struct {
	TransferToNew *ZkTransferToNew `protobuf:"bytes,6,opt,name=transferToNew,proto3,oneof"`
}

type ZksyncAction_ForceExit struct {
	ForceExit *ZkForceExit `protobuf:"bytes,7,opt,name=forceExit,proto3,oneof"`
}

type ZksyncAction_SetPubKey struct {
	SetPubKey *ZkSetPubKey `protobuf:"bytes,8,opt,name=setPubKey,proto3,oneof"`
}

type ZksyncAction_FullExit struct {
	FullExit *ZkFullExit `protobuf:"bytes,9,opt,name=fullExit,proto3,oneof"`
}

type ZksyncAction_Swap struct {
	Swap *ZkSwap `protobuf:"bytes,10,opt,name=swap,proto3,oneof"`
}

type ZksyncAction_SetVerifyKey struct {
	SetVerifyKey *ZkVerifyKey `protobuf:"bytes,11,opt,name=setVerifyKey,proto3,oneof"`
}

type ZksyncAction_CommitProof struct {
	CommitProof *ZkCommitProof `protobuf:"bytes,12,opt,name=commitProof,proto3,oneof"`
}

type ZksyncAction_SetVerifier struct {
	SetVerifier *ZkVerifier `protobuf:"bytes,13,opt,name=setVerifier,proto3,oneof"`
}

type ZksyncAction_SetFee struct {
	SetFee *ZkSetFee `protobuf:"bytes,14,opt,name=setFee,proto3,oneof"`
}

type ZksyncAction_MintNFT struct {
	MintNFT *ZkMintNFT `protobuf:"bytes,16,opt,name=mintNFT,proto3,oneof"`
}

type ZksyncAction_WithdrawNFT struct {
	WithdrawNFT *ZkWithdrawNFT `protobuf:"bytes,17,opt,name=withdrawNFT,proto3,oneof"`
}

type ZksyncAction_TransferNFT struct {
	TransferNFT *ZkTransferNFT `protobuf:"bytes,18,opt,name=transferNFT,proto3,oneof"`
}

func (*ZksyncAction_Deposit) isZksyncAction_Value() {}

func (*ZksyncAction_Withdraw) isZksyncAction_Value() {}

func (*ZksyncAction_ContractToTree) isZksyncAction_Value() {}

func (*ZksyncAction_TreeToContract) isZksyncAction_Value() {}

func (*ZksyncAction_Transfer) isZksyncAction_Value() {}

func (*ZksyncAction_TransferToNew) isZksyncAction_Value() {}

func (*ZksyncAction_ForceExit) isZksyncAction_Value() {}

func (*ZksyncAction_SetPubKey) isZksyncAction_Value() {}

func (*ZksyncAction_FullExit) isZksyncAction_Value() {}

func (*ZksyncAction_Swap) isZksyncAction_Value() {}

func (*ZksyncAction_SetVerifyKey) isZksyncAction_Value() {}

func (*ZksyncAction_CommitProof) isZksyncAction_Value() {}

func (*ZksyncAction_SetVerifier) isZksyncAction_Value() {}

func (*ZksyncAction_SetFee) isZksyncAction_Value() {}

func (*ZksyncAction_MintNFT) isZksyncAction_Value() {}

func (*ZksyncAction_WithdrawNFT) isZksyncAction_Value() {}

func (*ZksyncAction_TransferNFT) isZksyncAction_Value() {}

func (m *ZksyncAction) GetValue() isZksyncAction_Value {
	if m != nil {
		return m.Value
	}
	return nil
}

func (m *ZksyncAction) GetDeposit() *ZkDeposit {
	if x, ok := m.GetValue().(*ZksyncAction_Deposit); ok {
		return x.Deposit
	}
	return nil
}

func (m *ZksyncAction) GetWithdraw() *ZkWithdraw {
	if x, ok := m.GetValue().(*ZksyncAction_Withdraw); ok {
		return x.Withdraw
	}
	return nil
}

func (m *ZksyncAction) GetContractToTree() *ZkContractToTree {
	if x, ok := m.GetValue().(*ZksyncAction_ContractToTree); ok {
		return x.ContractToTree
	}
	return nil
}

func (m *ZksyncAction) GetTreeToContract() *ZkTreeToContract {
	if x, ok := m.GetValue().(*ZksyncAction_TreeToContract); ok {
		return x.TreeToContract
	}
	return nil
}

func (m *ZksyncAction) GetTransfer() *ZkTransfer {
	if x, ok := m.GetValue().(*ZksyncAction_Transfer); ok {
		return x.Transfer
	}
	return nil
}

func (m *ZksyncAction) GetTransferToNew() *ZkTransferToNew {
	if x, ok := m.GetValue().(*ZksyncAction_TransferToNew); ok {
		return x.TransferToNew
	}
	return nil
}

func (m *ZksyncAction) GetForceExit() *ZkForceExit {
	if x, ok := m.GetValue().(*ZksyncAction_ForceExit); ok {
		return x.ForceExit
	}
	return nil
}

func (m *ZksyncAction) GetSetPubKey() *ZkSetPubKey {
	if x, ok := m.GetValue().(*ZksyncAction_SetPubKey); ok {
		return x.SetPubKey
	}
	return nil
}

func (m *ZksyncAction) GetFullExit() *ZkFullExit {
	if x, ok := m.GetValue().(*ZksyncAction_FullExit); ok {
		return x.FullExit
	}
	return nil
}

func (m *ZksyncAction) GetSwap() *ZkSwap {
	if x, ok := m.GetValue().(*ZksyncAction_Swap); ok {
		return x.Swap
	}
	return nil
}

func (m *ZksyncAction) GetSetVerifyKey() *ZkVerifyKey {
	if x, ok := m.GetValue().(*ZksyncAction_SetVerifyKey); ok {
		return x.SetVerifyKey
	}
	return nil
}

func (m *ZksyncAction) GetCommitProof() *ZkCommitProof {
	if x, ok := m.GetValue().(*ZksyncAction_CommitProof); ok {
		return x.CommitProof
	}
	return nil
}

func (m *ZksyncAction) GetSetVerifier() *ZkVerifier {
	if x, ok := m.GetValue().(*ZksyncAction_SetVerifier); ok {
		return x.SetVerifier
	}
	return nil
}

func (m *ZksyncAction) GetSetFee() *ZkSetFee {
	if x, ok := m.GetValue().(*ZksyncAction_SetFee); ok {
		return x.SetFee
	}
	return nil
}

func (m *ZksyncAction) GetMintNFT() *ZkMintNFT {
	if x, ok := m.GetValue().(*ZksyncAction_MintNFT); ok {
		return x.MintNFT
	}
	return nil
}

func (m *ZksyncAction) GetWithdrawNFT() *ZkWithdrawNFT {
	if x, ok := m.GetValue().(*ZksyncAction_WithdrawNFT); ok {
		return x.WithdrawNFT
	}
	return nil
}

func (m *ZksyncAction) GetTransferNFT() *ZkTransferNFT {
	if x, ok := m.GetValue().(*ZksyncAction_TransferNFT); ok {
		return x.TransferNFT
	}
	return nil
}

func (m *ZksyncAction) GetTy() int32 {
	if m != nil {
		return m.Ty
	}
	return 0
}

// XXX_OneofFuncs is for the internal use of the proto package.
func (*ZksyncAction) XXX_OneofFuncs() (func(msg proto.Message, b *proto.Buffer) error, func(msg proto.Message, tag, wire int, b *proto.Buffer) (bool, error), func(msg proto.Message) (n int), []interface{}) {
	return _ZksyncAction_OneofMarshaler, _ZksyncAction_OneofUnmarshaler, _ZksyncAction_OneofSizer, []interface{}{
		(*ZksyncAction_Deposit)(nil),
		(*ZksyncAction_Withdraw)(nil),
		(*ZksyncAction_ContractToTree)(nil),
		(*ZksyncAction_TreeToContract)(nil),
		(*ZksyncAction_Transfer)(nil),
		(*ZksyncAction_TransferToNew)(nil),
		(*ZksyncAction_ForceExit)(nil),
		(*ZksyncAction_SetPubKey)(nil),
		(*ZksyncAction_FullExit)(nil),
		(*ZksyncAction_Swap)(nil),
		(*ZksyncAction_SetVerifyKey)(nil),
		(*ZksyncAction_CommitProof)(nil),
		(*ZksyncAction_SetVerifier)(nil),
		(*ZksyncAction_SetFee)(nil),
		(*ZksyncAction_MintNFT)(nil),
		(*ZksyncAction_WithdrawNFT)(nil),
		(*ZksyncAction_TransferNFT)(nil),
	}
}

func _ZksyncAction_OneofMarshaler(msg proto.Message, b *proto.Buffer) error {
	m := msg.(*ZksyncAction)
	// value
	switch x := m.Value.(type) {
	case *ZksyncAction_Deposit:
		b.EncodeVarint(1<<3 | proto.WireBytes)
		if err := b.EncodeMessage(x.Deposit); err != nil {
			return err
		}
	case *ZksyncAction_Withdraw:
		b.EncodeVarint(2<<3 | proto.WireBytes)
		if err := b.EncodeMessage(x.Withdraw); err != nil {
			return err
		}
	case *ZksyncAction_ContractToTree:
		b.EncodeVarint(3<<3 | proto.WireBytes)
		if err := b.EncodeMessage(x.ContractToTree); err != nil {
			return err
		}
	case *ZksyncAction_TreeToContract:
		b.EncodeVarint(4<<3 | proto.WireBytes)
		if err := b.EncodeMessage(x.TreeToContract); err != nil {
			return err
		}
	case *ZksyncAction_Transfer:
		b.EncodeVarint(5<<3 | proto.WireBytes)
		if err := b.EncodeMessage(x.Transfer); err != nil {
			return err
		}
	case *ZksyncAction_TransferToNew:
		b.EncodeVarint(6<<3 | proto.WireBytes)
		if err := b.EncodeMessage(x.TransferToNew); err != nil {
			return err
		}
	case *ZksyncAction_ForceExit:
		b.EncodeVarint(7<<3 | proto.WireBytes)
		if err := b.EncodeMessage(x.ForceExit); err != nil {
			return err
		}
	case *ZksyncAction_SetPubKey:
		b.EncodeVarint(8<<3 | proto.WireBytes)
		if err := b.EncodeMessage(x.SetPubKey); err != nil {
			return err
		}
	case *ZksyncAction_FullExit:
		b.EncodeVarint(9<<3 | proto.WireBytes)
		if err := b.EncodeMessage(x.FullExit); err != nil {
			return err
		}
	case *ZksyncAction_Swap:
		b.EncodeVarint(10<<3 | proto.WireBytes)
		if err := b.EncodeMessage(x.Swap); err != nil {
			return err
		}
	case *ZksyncAction_SetVerifyKey:
		b.EncodeVarint(11<<3 | proto.WireBytes)
		if err := b.EncodeMessage(x.SetVerifyKey); err != nil {
			return err
		}
	case *ZksyncAction_CommitProof:
		b.EncodeVarint(12<<3 | proto.WireBytes)
		if err := b.EncodeMessage(x.CommitProof); err != nil {
			return err
		}
	case *ZksyncAction_SetVerifier:
		b.EncodeVarint(13<<3 | proto.WireBytes)
		if err := b.EncodeMessage(x.SetVerifier); err != nil {
			return err
		}
	case *ZksyncAction_SetFee:
		b.EncodeVarint(14<<3 | proto.WireBytes)
		if err := b.EncodeMessage(x.SetFee); err != nil {
			return err
		}
	case *ZksyncAction_MintNFT:
		b.EncodeVarint(16<<3 | proto.WireBytes)
		if err := b.EncodeMessage(x.MintNFT); err != nil {
			return err
		}
	case *ZksyncAction_WithdrawNFT:
		b.EncodeVarint(17<<3 | proto.WireBytes)
		if err := b.EncodeMessage(x.WithdrawNFT); err != nil {
			return err
		}
	case *ZksyncAction_TransferNFT:
		b.EncodeVarint(18<<3 | proto.WireBytes)
		if err := b.EncodeMessage(x.TransferNFT); err != nil {
			return err
		}
	case nil:
	default:
		return fmt.Errorf("ZksyncAction.Value has unexpected type %T", x)
	}
	return nil
}

func _ZksyncAction_OneofUnmarshaler(msg proto.Message, tag, wire int, b *proto.Buffer) (bool, error) {
	m := msg.(*ZksyncAction)
	switch tag {
	case 1: // value.deposit
		if wire != proto.WireBytes {
			return true, proto.ErrInternalBadWireType
		}
		msg := new(ZkDeposit)
		err := b.DecodeMessage(msg)
		m.Value = &ZksyncAction_Deposit{msg}
		return true, err
	case 2: // value.withdraw
		if wire != proto.WireBytes {
			return true, proto.ErrInternalBadWireType
		}
		msg := new(ZkWithdraw)
		err := b.DecodeMessage(msg)
		m.Value = &ZksyncAction_Withdraw{msg}
		return true, err
	case 3: // value.contractToTree
		if wire != proto.WireBytes {
			return true, proto.ErrInternalBadWireType
		}
		msg := new(ZkContractToTree)
		err := b.DecodeMessage(msg)
		m.Value = &ZksyncAction_ContractToTree{msg}
		return true, err
	case 4: // value.treeToContract
		if wire != proto.WireBytes {
			return true, proto.ErrInternalBadWireType
		}
		msg := new(ZkTreeToContract)
		err := b.DecodeMessage(msg)
		m.Value = &ZksyncAction_TreeToContract{msg}
		return true, err
	case 5: // value.transfer
		if wire != proto.WireBytes {
			return true, proto.ErrInternalBadWireType
		}
		msg := new(ZkTransfer)
		err := b.DecodeMessage(msg)
		m.Value = &ZksyncAction_Transfer{msg}
		return true, err
	case 6: // value.transferToNew
		if wire != proto.WireBytes {
			return true, proto.ErrInternalBadWireType
		}
		msg := new(ZkTransferToNew)
		err := b.DecodeMessage(msg)
		m.Value = &ZksyncAction_TransferToNew{msg}
		return true, err
	case 7: // value.forceExit
		if wire != proto.WireBytes {
			return true, proto.ErrInternalBadWireType
		}
		msg := new(ZkForceExit)
		err := b.DecodeMessage(msg)
		m.Value = &ZksyncAction_ForceExit{msg}
		return true, err
	case 8: // value.setPubKey
		if wire != proto.WireBytes {
			return true, proto.ErrInternalBadWireType
		}
		msg := new(ZkSetPubKey)
		err := b.DecodeMessage(msg)
		m.Value = &ZksyncAction_SetPubKey{msg}
		return true, err
	case 9: // value.fullExit
		if wire != proto.WireBytes {
			return true, proto.ErrInternalBadWireType
		}
		msg := new(ZkFullExit)
		err := b.DecodeMessage(msg)
		m.Value = &ZksyncAction_FullExit{msg}
		return true, err
	case 10: // value.swap
		if wire != proto.WireBytes {
			return true, proto.ErrInternalBadWireType
		}
		msg := new(ZkSwap)
		err := b.DecodeMessage(msg)
		m.Value = &ZksyncAction_Swap{msg}
		return true, err
	case 11: // value.setVerifyKey
		if wire != proto.WireBytes {
			return true, proto.ErrInternalBadWireType
		}
		msg := new(ZkVerifyKey)
		err := b.DecodeMessage(msg)
		m.Value = &ZksyncAction_SetVerifyKey{msg}
		return true, err
	case 12: // value.commitProof
		if wire != proto.WireBytes {
			return true, proto.ErrInternalBadWireType
		}
		msg := new(ZkCommitProof)
		err := b.DecodeMessage(msg)
		m.Value = &ZksyncAction_CommitProof{msg}
		return true, err
	case 13: // value.setVerifier
		if wire != proto.WireBytes {
			return true, proto.ErrInternalBadWireType
		}
		msg := new(ZkVerifier)
		err := b.DecodeMessage(msg)
		m.Value = &ZksyncAction_SetVerifier{msg}
		return true, err
	case 14: // value.setFee
		if wire != proto.WireBytes {
			return true, proto.ErrInternalBadWireType
		}
		msg := new(ZkSetFee)
		err := b.DecodeMessage(msg)
		m.Value = &ZksyncAction_SetFee{msg}
		return true, err
	case 16: // value.mintNFT
		if wire != proto.WireBytes {
			return true, proto.ErrInternalBadWireType
		}
		msg := new(ZkMintNFT)
		err := b.DecodeMessage(msg)
		m.Value = &ZksyncAction_MintNFT{msg}
		return true, err
	case 17: // value.withdrawNFT
		if wire != proto.WireBytes {
			return true, proto.ErrInternalBadWireType
		}
		msg := new(ZkWithdrawNFT)
		err := b.DecodeMessage(msg)
		m.Value = &ZksyncAction_WithdrawNFT{msg}
		return true, err
	case 18: // value.transferNFT
		if wire != proto.WireBytes {
			return true, proto.ErrInternalBadWireType
		}
		msg := new(ZkTransferNFT)
		err := b.DecodeMessage(msg)
		m.Value = &ZksyncAction_TransferNFT{msg}
		return true, err
	default:
		return false, nil
	}
}

func _ZksyncAction_OneofSizer(msg proto.Message) (n int) {
	m := msg.(*ZksyncAction)
	// value
	switch x := m.Value.(type) {
	case *ZksyncAction_Deposit:
		s := proto.Size(x.Deposit)
		n += 1 // tag and wire
		n += proto.SizeVarint(uint64(s))
		n += s
	case *ZksyncAction_Withdraw:
		s := proto.Size(x.Withdraw)
		n += 1 // tag and wire
		n += proto.SizeVarint(uint64(s))
		n += s
	case *ZksyncAction_ContractToTree:
		s := proto.Size(x.ContractToTree)
		n += 1 // tag and wire
		n += proto.SizeVarint(uint64(s))
		n += s
	case *ZksyncAction_TreeToContract:
		s := proto.Size(x.TreeToContract)
		n += 1 // tag and wire
		n += proto.SizeVarint(uint64(s))
		n += s
	case *ZksyncAction_Transfer:
		s := proto.Size(x.Transfer)
		n += 1 // tag and wire
		n += proto.SizeVarint(uint64(s))
		n += s
	case *ZksyncAction_TransferToNew:
		s := proto.Size(x.TransferToNew)
		n += 1 // tag and wire
		n += proto.SizeVarint(uint64(s))
		n += s
	case *ZksyncAction_ForceExit:
		s := proto.Size(x.ForceExit)
		n += 1 // tag and wire
		n += proto.SizeVarint(uint64(s))
		n += s
	case *ZksyncAction_SetPubKey:
		s := proto.Size(x.SetPubKey)
		n += 1 // tag and wire
		n += proto.SizeVarint(uint64(s))
		n += s
	case *ZksyncAction_FullExit:
		s := proto.Size(x.FullExit)
		n += 1 // tag and wire
		n += proto.SizeVarint(uint64(s))
		n += s
	case *ZksyncAction_Swap:
		s := proto.Size(x.Swap)
		n += 1 // tag and wire
		n += proto.SizeVarint(uint64(s))
		n += s
	case *ZksyncAction_SetVerifyKey:
		s := proto.Size(x.SetVerifyKey)
		n += 1 // tag and wire
		n += proto.SizeVarint(uint64(s))
		n += s
	case *ZksyncAction_CommitProof:
		s := proto.Size(x.CommitProof)
		n += 1 // tag and wire
		n += proto.SizeVarint(uint64(s))
		n += s
	case *ZksyncAction_SetVerifier:
		s := proto.Size(x.SetVerifier)
		n += 1 // tag and wire
		n += proto.SizeVarint(uint64(s))
		n += s
	case *ZksyncAction_SetFee:
		s := proto.Size(x.SetFee)
		n += 1 // tag and wire
		n += proto.SizeVarint(uint64(s))
		n += s
	case *ZksyncAction_MintNFT:
		s := proto.Size(x.MintNFT)
		n += 2 // tag and wire
		n += proto.SizeVarint(uint64(s))
		n += s
	case *ZksyncAction_WithdrawNFT:
		s := proto.Size(x.WithdrawNFT)
		n += 2 // tag and wire
		n += proto.SizeVarint(uint64(s))
		n += s
	case *ZksyncAction_TransferNFT:
		s := proto.Size(x.TransferNFT)
		n += 2 // tag and wire
		n += proto.SizeVarint(uint64(s))
		n += s
	case nil:
	default:
		panic(fmt.Sprintf("proto: unexpected type %T in oneof", x))
	}
	return n
}

// 某个token的余额
type TokenBalance struct {
	TokenId              uint64   `protobuf:"varint,1,opt,name=tokenId,proto3" json:"tokenId,omitempty"`
	Balance              string   `protobuf:"bytes,2,opt,name=balance,proto3" json:"balance,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *TokenBalance) Reset()         { *m = TokenBalance{} }
func (m *TokenBalance) String() string { return proto.CompactTextString(m) }
func (*TokenBalance) ProtoMessage()    {}
func (*TokenBalance) Descriptor() ([]byte, []int) {
	return fileDescriptor_zksync_95b070c4c0abad18, []int{1}
}
func (m *TokenBalance) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_TokenBalance.Unmarshal(m, b)
}
func (m *TokenBalance) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_TokenBalance.Marshal(b, m, deterministic)
}
func (dst *TokenBalance) XXX_Merge(src proto.Message) {
	xxx_messageInfo_TokenBalance.Merge(dst, src)
}
func (m *TokenBalance) XXX_Size() int {
	return xxx_messageInfo_TokenBalance.Size(m)
}
func (m *TokenBalance) XXX_DiscardUnknown() {
	xxx_messageInfo_TokenBalance.DiscardUnknown(m)
}

var xxx_messageInfo_TokenBalance proto.InternalMessageInfo

func (m *TokenBalance) GetTokenId() uint64 {
	if m != nil {
		return m.TokenId
	}
	return 0
}

func (m *TokenBalance) GetBalance() string {
	if m != nil {
		return m.Balance
	}
	return ""
}

type AccountTree struct {
	Index                uint64     `protobuf:"varint,1,opt,name=index,proto3" json:"index,omitempty"`
	TotalIndex           uint64     `protobuf:"varint,2,opt,name=totalIndex,proto3" json:"totalIndex,omitempty"`
	MaxCurrentIndex      uint64     `protobuf:"varint,3,opt,name=maxCurrentIndex,proto3" json:"maxCurrentIndex,omitempty"`
	SubTrees             []*SubTree `protobuf:"bytes,4,rep,name=subTrees,proto3" json:"subTrees,omitempty"`
	XXX_NoUnkeyedLiteral struct{}   `json:"-"`
	XXX_unrecognized     []byte     `json:"-"`
	XXX_sizecache        int32      `json:"-"`
}

func (m *AccountTree) Reset()         { *m = AccountTree{} }
func (m *AccountTree) String() string { return proto.CompactTextString(m) }
func (*AccountTree) ProtoMessage()    {}
func (*AccountTree) Descriptor() ([]byte, []int) {
	return fileDescriptor_zksync_95b070c4c0abad18, []int{2}
}
func (m *AccountTree) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_AccountTree.Unmarshal(m, b)
}
func (m *AccountTree) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_AccountTree.Marshal(b, m, deterministic)
}
func (dst *AccountTree) XXX_Merge(src proto.Message) {
	xxx_messageInfo_AccountTree.Merge(dst, src)
}
func (m *AccountTree) XXX_Size() int {
	return xxx_messageInfo_AccountTree.Size(m)
}
func (m *AccountTree) XXX_DiscardUnknown() {
	xxx_messageInfo_AccountTree.DiscardUnknown(m)
}

var xxx_messageInfo_AccountTree proto.InternalMessageInfo

func (m *AccountTree) GetIndex() uint64 {
	if m != nil {
		return m.Index
	}
	return 0
}

func (m *AccountTree) GetTotalIndex() uint64 {
	if m != nil {
		return m.TotalIndex
	}
	return 0
}

func (m *AccountTree) GetMaxCurrentIndex() uint64 {
	if m != nil {
		return m.MaxCurrentIndex
	}
	return 0
}

func (m *AccountTree) GetSubTrees() []*SubTree {
	if m != nil {
		return m.SubTrees
	}
	return nil
}

type Leaf struct {
	AccountId            uint64               `protobuf:"varint,1,opt,name=accountId,proto3" json:"accountId,omitempty"`
	EthAddress           string               `protobuf:"bytes,2,opt,name=ethAddress,proto3" json:"ethAddress,omitempty"`
	PubKey               *ZkPubKey            `protobuf:"bytes,3,opt,name=pubKey,proto3" json:"pubKey,omitempty"`
	L2Addr               string               `protobuf:"bytes,4,opt,name=l2Addr,proto3" json:"l2Addr,omitempty"`
	TokenHash            string               `protobuf:"bytes,5,opt,name=tokenHash,proto3" json:"tokenHash,omitempty"`
	TokenIds             []uint64             `protobuf:"varint,6,rep,packed,name=tokenIds,proto3" json:"tokenIds,omitempty"`
	ProxyPubKeys         *AccountProxyPubKeys `protobuf:"bytes,7,opt,name=proxyPubKeys,proto3" json:"proxyPubKeys,omitempty"`
	ChainAddr            string               `protobuf:"bytes,8,opt,name=chainAddr,proto3" json:"chainAddr,omitempty"`
	ProxyChainAddr       string               `protobuf:"bytes,9,opt,name=proxyChainAddr,proto3" json:"proxyChainAddr,omitempty"`
	XXX_NoUnkeyedLiteral struct{}             `json:"-"`
	XXX_unrecognized     []byte               `json:"-"`
	XXX_sizecache        int32                `json:"-"`
}

func (m *Leaf) Reset()         { *m = Leaf{} }
func (m *Leaf) String() string { return proto.CompactTextString(m) }
func (*Leaf) ProtoMessage()    {}
func (*Leaf) Descriptor() ([]byte, []int) {
	return fileDescriptor_zksync_95b070c4c0abad18, []int{3}
}
func (m *Leaf) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_Leaf.Unmarshal(m, b)
}
func (m *Leaf) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_Leaf.Marshal(b, m, deterministic)
}
func (dst *Leaf) XXX_Merge(src proto.Message) {
	xxx_messageInfo_Leaf.Merge(dst, src)
}
func (m *Leaf) XXX_Size() int {
	return xxx_messageInfo_Leaf.Size(m)
}
func (m *Leaf) XXX_DiscardUnknown() {
	xxx_messageInfo_Leaf.DiscardUnknown(m)
}

var xxx_messageInfo_Leaf proto.InternalMessageInfo

func (m *Leaf) GetAccountId() uint64 {
	if m != nil {
		return m.AccountId
	}
	return 0
}

func (m *Leaf) GetEthAddress() string {
	if m != nil {
		return m.EthAddress
	}
	return ""
}

func (m *Leaf) GetPubKey() *ZkPubKey {
	if m != nil {
		return m.PubKey
	}
	return nil
}

func (m *Leaf) GetL2Addr() string {
	if m != nil {
		return m.L2Addr
	}
	return ""
}

func (m *Leaf) GetTokenHash() string {
	if m != nil {
		return m.TokenHash
	}
	return ""
}

func (m *Leaf) GetTokenIds() []uint64 {
	if m != nil {
		return m.TokenIds
	}
	return nil
}

func (m *Leaf) GetProxyPubKeys() *AccountProxyPubKeys {
	if m != nil {
		return m.ProxyPubKeys
	}
	return nil
}

func (m *Leaf) GetChainAddr() string {
	if m != nil {
		return m.ChainAddr
	}
	return ""
}

func (m *Leaf) GetProxyChainAddr() string {
	if m != nil {
		return m.ProxyChainAddr
	}
	return ""
}

type HistoryLeaf struct {
	AccountId            uint64               `protobuf:"varint,1,opt,name=accountId,proto3" json:"accountId,omitempty"`
	EthAddress           string               `protobuf:"bytes,2,opt,name=ethAddress,proto3" json:"ethAddress,omitempty"`
	PubKey               *ZkPubKey            `protobuf:"bytes,3,opt,name=pubKey,proto3" json:"pubKey,omitempty"`
	Chain33Addr          string               `protobuf:"bytes,4,opt,name=chain33Addr,proto3" json:"chain33Addr,omitempty"`
	TokenHash            string               `protobuf:"bytes,5,opt,name=tokenHash,proto3" json:"tokenHash,omitempty"`
	Tokens               []*TokenBalance      `protobuf:"bytes,6,rep,name=tokens,proto3" json:"tokens,omitempty"`
	ProofId              uint64               `protobuf:"varint,7,opt,name=proofId,proto3" json:"proofId,omitempty"`
	ProxyPubKeys         *AccountProxyPubKeys `protobuf:"bytes,8,opt,name=proxyPubKeys,proto3" json:"proxyPubKeys,omitempty"`
	XXX_NoUnkeyedLiteral struct{}             `json:"-"`
	XXX_unrecognized     []byte               `json:"-"`
	XXX_sizecache        int32                `json:"-"`
}

func (m *HistoryLeaf) Reset()         { *m = HistoryLeaf{} }
func (m *HistoryLeaf) String() string { return proto.CompactTextString(m) }
func (*HistoryLeaf) ProtoMessage()    {}
func (*HistoryLeaf) Descriptor() ([]byte, []int) {
	return fileDescriptor_zksync_95b070c4c0abad18, []int{4}
}
func (m *HistoryLeaf) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_HistoryLeaf.Unmarshal(m, b)
}
func (m *HistoryLeaf) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_HistoryLeaf.Marshal(b, m, deterministic)
}
func (dst *HistoryLeaf) XXX_Merge(src proto.Message) {
	xxx_messageInfo_HistoryLeaf.Merge(dst, src)
}
func (m *HistoryLeaf) XXX_Size() int {
	return xxx_messageInfo_HistoryLeaf.Size(m)
}
func (m *HistoryLeaf) XXX_DiscardUnknown() {
	xxx_messageInfo_HistoryLeaf.DiscardUnknown(m)
}

var xxx_messageInfo_HistoryLeaf proto.InternalMessageInfo

func (m *HistoryLeaf) GetAccountId() uint64 {
	if m != nil {
		return m.AccountId
	}
	return 0
}

func (m *HistoryLeaf) GetEthAddress() string {
	if m != nil {
		return m.EthAddress
	}
	return ""
}

func (m *HistoryLeaf) GetPubKey() *ZkPubKey {
	if m != nil {
		return m.PubKey
	}
	return nil
}

func (m *HistoryLeaf) GetChain33Addr() string {
	if m != nil {
		return m.Chain33Addr
	}
	return ""
}

func (m *HistoryLeaf) GetTokenHash() string {
	if m != nil {
		return m.TokenHash
	}
	return ""
}

func (m *HistoryLeaf) GetTokens() []*TokenBalance {
	if m != nil {
		return m.Tokens
	}
	return nil
}

func (m *HistoryLeaf) GetProofId() uint64 {
	if m != nil {
		return m.ProofId
	}
	return 0
}

func (m *HistoryLeaf) GetProxyPubKeys() *AccountProxyPubKeys {
	if m != nil {
		return m.ProxyPubKeys
	}
	return nil
}

type RootInfo struct {
	RootHash             string   `protobuf:"bytes,1,opt,name=rootHash,proto3" json:"rootHash,omitempty"`
	Height               int32    `protobuf:"varint,2,opt,name=height,proto3" json:"height,omitempty"`
	StartIndex           uint64   `protobuf:"varint,3,opt,name=startIndex,proto3" json:"startIndex,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *RootInfo) Reset()         { *m = RootInfo{} }
func (m *RootInfo) String() string { return proto.CompactTextString(m) }
func (*RootInfo) ProtoMessage()    {}
func (*RootInfo) Descriptor() ([]byte, []int) {
	return fileDescriptor_zksync_95b070c4c0abad18, []int{5}
}
func (m *RootInfo) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_RootInfo.Unmarshal(m, b)
}
func (m *RootInfo) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_RootInfo.Marshal(b, m, deterministic)
}
func (dst *RootInfo) XXX_Merge(src proto.Message) {
	xxx_messageInfo_RootInfo.Merge(dst, src)
}
func (m *RootInfo) XXX_Size() int {
	return xxx_messageInfo_RootInfo.Size(m)
}
func (m *RootInfo) XXX_DiscardUnknown() {
	xxx_messageInfo_RootInfo.DiscardUnknown(m)
}

var xxx_messageInfo_RootInfo proto.InternalMessageInfo

func (m *RootInfo) GetRootHash() string {
	if m != nil {
		return m.RootHash
	}
	return ""
}

func (m *RootInfo) GetHeight() int32 {
	if m != nil {
		return m.Height
	}
	return 0
}

func (m *RootInfo) GetStartIndex() uint64 {
	if m != nil {
		return m.StartIndex
	}
	return 0
}

type SubTree struct {
	Height               int32    `protobuf:"varint,1,opt,name=height,proto3" json:"height,omitempty"`
	RootHash             []byte   `protobuf:"bytes,2,opt,name=rootHash,proto3" json:"rootHash,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *SubTree) Reset()         { *m = SubTree{} }
func (m *SubTree) String() string { return proto.CompactTextString(m) }
func (*SubTree) ProtoMessage()    {}
func (*SubTree) Descriptor() ([]byte, []int) {
	return fileDescriptor_zksync_95b070c4c0abad18, []int{6}
}
func (m *SubTree) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_SubTree.Unmarshal(m, b)
}
func (m *SubTree) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_SubTree.Marshal(b, m, deterministic)
}
func (dst *SubTree) XXX_Merge(src proto.Message) {
	xxx_messageInfo_SubTree.Merge(dst, src)
}
func (m *SubTree) XXX_Size() int {
	return xxx_messageInfo_SubTree.Size(m)
}
func (m *SubTree) XXX_DiscardUnknown() {
	xxx_messageInfo_SubTree.DiscardUnknown(m)
}

var xxx_messageInfo_SubTree proto.InternalMessageInfo

func (m *SubTree) GetHeight() int32 {
	if m != nil {
		return m.Height
	}
	return 0
}

func (m *SubTree) GetRootHash() []byte {
	if m != nil {
		return m.RootHash
	}
	return nil
}

type MerkleTreeProof struct {
	RootHash             string   `protobuf:"bytes,1,opt,name=rootHash,proto3" json:"rootHash,omitempty"`
	ProofSet             []string `protobuf:"bytes,2,rep,name=proofSet,proto3" json:"proofSet,omitempty"`
	Helpers              []string `protobuf:"bytes,3,rep,name=helpers,proto3" json:"helpers,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *MerkleTreeProof) Reset()         { *m = MerkleTreeProof{} }
func (m *MerkleTreeProof) String() string { return proto.CompactTextString(m) }
func (*MerkleTreeProof) ProtoMessage()    {}
func (*MerkleTreeProof) Descriptor() ([]byte, []int) {
	return fileDescriptor_zksync_95b070c4c0abad18, []int{7}
}
func (m *MerkleTreeProof) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_MerkleTreeProof.Unmarshal(m, b)
}
func (m *MerkleTreeProof) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_MerkleTreeProof.Marshal(b, m, deterministic)
}
func (dst *MerkleTreeProof) XXX_Merge(src proto.Message) {
	xxx_messageInfo_MerkleTreeProof.Merge(dst, src)
}
func (m *MerkleTreeProof) XXX_Size() int {
	return xxx_messageInfo_MerkleTreeProof.Size(m)
}
func (m *MerkleTreeProof) XXX_DiscardUnknown() {
	xxx_messageInfo_MerkleTreeProof.DiscardUnknown(m)
}

var xxx_messageInfo_MerkleTreeProof proto.InternalMessageInfo

func (m *MerkleTreeProof) GetRootHash() string {
	if m != nil {
		return m.RootHash
	}
	return ""
}

func (m *MerkleTreeProof) GetProofSet() []string {
	if m != nil {
		return m.ProofSet
	}
	return nil
}

func (m *MerkleTreeProof) GetHelpers() []string {
	if m != nil {
		return m.Helpers
	}
	return nil
}

type ZkDeposit struct {
	TokenId              uint64       `protobuf:"varint,1,opt,name=tokenId,proto3" json:"tokenId,omitempty"`
	Amount               string       `protobuf:"bytes,2,opt,name=amount,proto3" json:"amount,omitempty"`
	EthAddress           string       `protobuf:"bytes,3,opt,name=ethAddress,proto3" json:"ethAddress,omitempty"`
	Chain33Addr          string       `protobuf:"bytes,4,opt,name=chain33Addr,proto3" json:"chain33Addr,omitempty"`
	EthPriorityQueueId   int64        `protobuf:"varint,5,opt,name=ethPriorityQueueId,proto3" json:"ethPriorityQueueId,omitempty"`
	Signature            *ZkSignature `protobuf:"bytes,6,opt,name=signature,proto3" json:"signature,omitempty"`
	XXX_NoUnkeyedLiteral struct{}     `json:"-"`
	XXX_unrecognized     []byte       `json:"-"`
	XXX_sizecache        int32        `json:"-"`
}

func (m *ZkDeposit) Reset()         { *m = ZkDeposit{} }
func (m *ZkDeposit) String() string { return proto.CompactTextString(m) }
func (*ZkDeposit) ProtoMessage()    {}
func (*ZkDeposit) Descriptor() ([]byte, []int) {
	return fileDescriptor_zksync_95b070c4c0abad18, []int{8}
}
func (m *ZkDeposit) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_ZkDeposit.Unmarshal(m, b)
}
func (m *ZkDeposit) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_ZkDeposit.Marshal(b, m, deterministic)
}
func (dst *ZkDeposit) XXX_Merge(src proto.Message) {
	xxx_messageInfo_ZkDeposit.Merge(dst, src)
}
func (m *ZkDeposit) XXX_Size() int {
	return xxx_messageInfo_ZkDeposit.Size(m)
}
func (m *ZkDeposit) XXX_DiscardUnknown() {
	xxx_messageInfo_ZkDeposit.DiscardUnknown(m)
}

var xxx_messageInfo_ZkDeposit proto.InternalMessageInfo

func (m *ZkDeposit) GetTokenId() uint64 {
	if m != nil {
		return m.TokenId
	}
	return 0
}

func (m *ZkDeposit) GetAmount() string {
	if m != nil {
		return m.Amount
	}
	return ""
}

func (m *ZkDeposit) GetEthAddress() string {
	if m != nil {
		return m.EthAddress
	}
	return ""
}

func (m *ZkDeposit) GetChain33Addr() string {
	if m != nil {
		return m.Chain33Addr
	}
	return ""
}

func (m *ZkDeposit) GetEthPriorityQueueId() int64 {
	if m != nil {
		return m.EthPriorityQueueId
	}
	return 0
}

func (m *ZkDeposit) GetSignature() *ZkSignature {
	if m != nil {
		return m.Signature
	}
	return nil
}

type ZkWithdraw struct {
	TokenId              uint64       `protobuf:"varint,1,opt,name=tokenId,proto3" json:"tokenId,omitempty"`
	Amount               string       `protobuf:"bytes,2,opt,name=amount,proto3" json:"amount,omitempty"`
	AccountId            uint64       `protobuf:"varint,3,opt,name=accountId,proto3" json:"accountId,omitempty"`
	Signature            *ZkSignature `protobuf:"bytes,4,opt,name=signature,proto3" json:"signature,omitempty"`
	XXX_NoUnkeyedLiteral struct{}     `json:"-"`
	XXX_unrecognized     []byte       `json:"-"`
	XXX_sizecache        int32        `json:"-"`
}

func (m *ZkWithdraw) Reset()         { *m = ZkWithdraw{} }
func (m *ZkWithdraw) String() string { return proto.CompactTextString(m) }
func (*ZkWithdraw) ProtoMessage()    {}
func (*ZkWithdraw) Descriptor() ([]byte, []int) {
	return fileDescriptor_zksync_95b070c4c0abad18, []int{9}
}
func (m *ZkWithdraw) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_ZkWithdraw.Unmarshal(m, b)
}
func (m *ZkWithdraw) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_ZkWithdraw.Marshal(b, m, deterministic)
}
func (dst *ZkWithdraw) XXX_Merge(src proto.Message) {
	xxx_messageInfo_ZkWithdraw.Merge(dst, src)
}
func (m *ZkWithdraw) XXX_Size() int {
	return xxx_messageInfo_ZkWithdraw.Size(m)
}
func (m *ZkWithdraw) XXX_DiscardUnknown() {
	xxx_messageInfo_ZkWithdraw.DiscardUnknown(m)
}

var xxx_messageInfo_ZkWithdraw proto.InternalMessageInfo

func (m *ZkWithdraw) GetTokenId() uint64 {
	if m != nil {
		return m.TokenId
	}
	return 0
}

func (m *ZkWithdraw) GetAmount() string {
	if m != nil {
		return m.Amount
	}
	return ""
}

func (m *ZkWithdraw) GetAccountId() uint64 {
	if m != nil {
		return m.AccountId
	}
	return 0
}

func (m *ZkWithdraw) GetSignature() *ZkSignature {
	if m != nil {
		return m.Signature
	}
	return nil
}

type ZkContractToTree struct {
	TokenId              uint64       `protobuf:"varint,1,opt,name=tokenId,proto3" json:"tokenId,omitempty"`
	Amount               string       `protobuf:"bytes,2,opt,name=amount,proto3" json:"amount,omitempty"`
	AccountId            uint64       `protobuf:"varint,3,opt,name=accountId,proto3" json:"accountId,omitempty"`
	Signature            *ZkSignature `protobuf:"bytes,4,opt,name=signature,proto3" json:"signature,omitempty"`
	XXX_NoUnkeyedLiteral struct{}     `json:"-"`
	XXX_unrecognized     []byte       `json:"-"`
	XXX_sizecache        int32        `json:"-"`
}

func (m *ZkContractToTree) Reset()         { *m = ZkContractToTree{} }
func (m *ZkContractToTree) String() string { return proto.CompactTextString(m) }
func (*ZkContractToTree) ProtoMessage()    {}
func (*ZkContractToTree) Descriptor() ([]byte, []int) {
	return fileDescriptor_zksync_95b070c4c0abad18, []int{10}
}
func (m *ZkContractToTree) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_ZkContractToTree.Unmarshal(m, b)
}
func (m *ZkContractToTree) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_ZkContractToTree.Marshal(b, m, deterministic)
}
func (dst *ZkContractToTree) XXX_Merge(src proto.Message) {
	xxx_messageInfo_ZkContractToTree.Merge(dst, src)
}
func (m *ZkContractToTree) XXX_Size() int {
	return xxx_messageInfo_ZkContractToTree.Size(m)
}
func (m *ZkContractToTree) XXX_DiscardUnknown() {
	xxx_messageInfo_ZkContractToTree.DiscardUnknown(m)
}

var xxx_messageInfo_ZkContractToTree proto.InternalMessageInfo

func (m *ZkContractToTree) GetTokenId() uint64 {
	if m != nil {
		return m.TokenId
	}
	return 0
}

func (m *ZkContractToTree) GetAmount() string {
	if m != nil {
		return m.Amount
	}
	return ""
}

func (m *ZkContractToTree) GetAccountId() uint64 {
	if m != nil {
		return m.AccountId
	}
	return 0
}

func (m *ZkContractToTree) GetSignature() *ZkSignature {
	if m != nil {
		return m.Signature
	}
	return nil
}

type ZkTreeToContract struct {
	TokenId              uint64       `protobuf:"varint,1,opt,name=tokenId,proto3" json:"tokenId,omitempty"`
	Amount               string       `protobuf:"bytes,2,opt,name=amount,proto3" json:"amount,omitempty"`
	AccountId            uint64       `protobuf:"varint,3,opt,name=accountId,proto3" json:"accountId,omitempty"`
	Signature            *ZkSignature `protobuf:"bytes,4,opt,name=signature,proto3" json:"signature,omitempty"`
	XXX_NoUnkeyedLiteral struct{}     `json:"-"`
	XXX_unrecognized     []byte       `json:"-"`
	XXX_sizecache        int32        `json:"-"`
}

func (m *ZkTreeToContract) Reset()         { *m = ZkTreeToContract{} }
func (m *ZkTreeToContract) String() string { return proto.CompactTextString(m) }
func (*ZkTreeToContract) ProtoMessage()    {}
func (*ZkTreeToContract) Descriptor() ([]byte, []int) {
	return fileDescriptor_zksync_95b070c4c0abad18, []int{11}
}
func (m *ZkTreeToContract) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_ZkTreeToContract.Unmarshal(m, b)
}
func (m *ZkTreeToContract) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_ZkTreeToContract.Marshal(b, m, deterministic)
}
func (dst *ZkTreeToContract) XXX_Merge(src proto.Message) {
	xxx_messageInfo_ZkTreeToContract.Merge(dst, src)
}
func (m *ZkTreeToContract) XXX_Size() int {
	return xxx_messageInfo_ZkTreeToContract.Size(m)
}
func (m *ZkTreeToContract) XXX_DiscardUnknown() {
	xxx_messageInfo_ZkTreeToContract.DiscardUnknown(m)
}

var xxx_messageInfo_ZkTreeToContract proto.InternalMessageInfo

func (m *ZkTreeToContract) GetTokenId() uint64 {
	if m != nil {
		return m.TokenId
	}
	return 0
}

func (m *ZkTreeToContract) GetAmount() string {
	if m != nil {
		return m.Amount
	}
	return ""
}

func (m *ZkTreeToContract) GetAccountId() uint64 {
	if m != nil {
		return m.AccountId
	}
	return 0
}

func (m *ZkTreeToContract) GetSignature() *ZkSignature {
	if m != nil {
		return m.Signature
	}
	return nil
}

type ZkTransfer struct {
	TokenId              uint64       `protobuf:"varint,1,opt,name=tokenId,proto3" json:"tokenId,omitempty"`
	Amount               string       `protobuf:"bytes,2,opt,name=amount,proto3" json:"amount,omitempty"`
	FromAccountId        uint64       `protobuf:"varint,3,opt,name=fromAccountId,proto3" json:"fromAccountId,omitempty"`
	ToAccountId          uint64       `protobuf:"varint,4,opt,name=toAccountId,proto3" json:"toAccountId,omitempty"`
	Signature            *ZkSignature `protobuf:"bytes,5,opt,name=signature,proto3" json:"signature,omitempty"`
	XXX_NoUnkeyedLiteral struct{}     `json:"-"`
	XXX_unrecognized     []byte       `json:"-"`
	XXX_sizecache        int32        `json:"-"`
}

func (m *ZkTransfer) Reset()         { *m = ZkTransfer{} }
func (m *ZkTransfer) String() string { return proto.CompactTextString(m) }
func (*ZkTransfer) ProtoMessage()    {}
func (*ZkTransfer) Descriptor() ([]byte, []int) {
	return fileDescriptor_zksync_95b070c4c0abad18, []int{12}
}
func (m *ZkTransfer) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_ZkTransfer.Unmarshal(m, b)
}
func (m *ZkTransfer) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_ZkTransfer.Marshal(b, m, deterministic)
}
func (dst *ZkTransfer) XXX_Merge(src proto.Message) {
	xxx_messageInfo_ZkTransfer.Merge(dst, src)
}
func (m *ZkTransfer) XXX_Size() int {
	return xxx_messageInfo_ZkTransfer.Size(m)
}
func (m *ZkTransfer) XXX_DiscardUnknown() {
	xxx_messageInfo_ZkTransfer.DiscardUnknown(m)
}

var xxx_messageInfo_ZkTransfer proto.InternalMessageInfo

func (m *ZkTransfer) GetTokenId() uint64 {
	if m != nil {
		return m.TokenId
	}
	return 0
}

func (m *ZkTransfer) GetAmount() string {
	if m != nil {
		return m.Amount
	}
	return ""
}

func (m *ZkTransfer) GetFromAccountId() uint64 {
	if m != nil {
		return m.FromAccountId
	}
	return 0
}

func (m *ZkTransfer) GetToAccountId() uint64 {
	if m != nil {
		return m.ToAccountId
	}
	return 0
}

func (m *ZkTransfer) GetSignature() *ZkSignature {
	if m != nil {
		return m.Signature
	}
	return nil
}

type ZkTransferToNew struct {
	TokenId              uint64       `protobuf:"varint,1,opt,name=tokenId,proto3" json:"tokenId,omitempty"`
	Amount               string       `protobuf:"bytes,2,opt,name=amount,proto3" json:"amount,omitempty"`
	FromAccountId        uint64       `protobuf:"varint,3,opt,name=fromAccountId,proto3" json:"fromAccountId,omitempty"`
	ToEthAddress         string       `protobuf:"bytes,4,opt,name=toEthAddress,proto3" json:"toEthAddress,omitempty"`
	ToChain33Address     string       `protobuf:"bytes,5,opt,name=toChain33Address,proto3" json:"toChain33Address,omitempty"`
	Signature            *ZkSignature `protobuf:"bytes,6,opt,name=signature,proto3" json:"signature,omitempty"`
	XXX_NoUnkeyedLiteral struct{}     `json:"-"`
	XXX_unrecognized     []byte       `json:"-"`
	XXX_sizecache        int32        `json:"-"`
}

func (m *ZkTransferToNew) Reset()         { *m = ZkTransferToNew{} }
func (m *ZkTransferToNew) String() string { return proto.CompactTextString(m) }
func (*ZkTransferToNew) ProtoMessage()    {}
func (*ZkTransferToNew) Descriptor() ([]byte, []int) {
	return fileDescriptor_zksync_95b070c4c0abad18, []int{13}
}
func (m *ZkTransferToNew) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_ZkTransferToNew.Unmarshal(m, b)
}
func (m *ZkTransferToNew) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_ZkTransferToNew.Marshal(b, m, deterministic)
}
func (dst *ZkTransferToNew) XXX_Merge(src proto.Message) {
	xxx_messageInfo_ZkTransferToNew.Merge(dst, src)
}
func (m *ZkTransferToNew) XXX_Size() int {
	return xxx_messageInfo_ZkTransferToNew.Size(m)
}
func (m *ZkTransferToNew) XXX_DiscardUnknown() {
	xxx_messageInfo_ZkTransferToNew.DiscardUnknown(m)
}

var xxx_messageInfo_ZkTransferToNew proto.InternalMessageInfo

func (m *ZkTransferToNew) GetTokenId() uint64 {
	if m != nil {
		return m.TokenId
	}
	return 0
}

func (m *ZkTransferToNew) GetAmount() string {
	if m != nil {
		return m.Amount
	}
	return ""
}

func (m *ZkTransferToNew) GetFromAccountId() uint64 {
	if m != nil {
		return m.FromAccountId
	}
	return 0
}

func (m *ZkTransferToNew) GetToEthAddress() string {
	if m != nil {
		return m.ToEthAddress
	}
	return ""
}

func (m *ZkTransferToNew) GetToChain33Address() string {
	if m != nil {
		return m.ToChain33Address
	}
	return ""
}

func (m *ZkTransferToNew) GetSignature() *ZkSignature {
	if m != nil {
		return m.Signature
	}
	return nil
}

type ZkForceExit struct {
	TokenId              uint64       `protobuf:"varint,1,opt,name=tokenId,proto3" json:"tokenId,omitempty"`
	AccountId            uint64       `protobuf:"varint,2,opt,name=accountId,proto3" json:"accountId,omitempty"`
	Signature            *ZkSignature `protobuf:"bytes,3,opt,name=signature,proto3" json:"signature,omitempty"`
	XXX_NoUnkeyedLiteral struct{}     `json:"-"`
	XXX_unrecognized     []byte       `json:"-"`
	XXX_sizecache        int32        `json:"-"`
}

func (m *ZkForceExit) Reset()         { *m = ZkForceExit{} }
func (m *ZkForceExit) String() string { return proto.CompactTextString(m) }
func (*ZkForceExit) ProtoMessage()    {}
func (*ZkForceExit) Descriptor() ([]byte, []int) {
	return fileDescriptor_zksync_95b070c4c0abad18, []int{14}
}
func (m *ZkForceExit) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_ZkForceExit.Unmarshal(m, b)
}
func (m *ZkForceExit) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_ZkForceExit.Marshal(b, m, deterministic)
}
func (dst *ZkForceExit) XXX_Merge(src proto.Message) {
	xxx_messageInfo_ZkForceExit.Merge(dst, src)
}
func (m *ZkForceExit) XXX_Size() int {
	return xxx_messageInfo_ZkForceExit.Size(m)
}
func (m *ZkForceExit) XXX_DiscardUnknown() {
	xxx_messageInfo_ZkForceExit.DiscardUnknown(m)
}

var xxx_messageInfo_ZkForceExit proto.InternalMessageInfo

func (m *ZkForceExit) GetTokenId() uint64 {
	if m != nil {
		return m.TokenId
	}
	return 0
}

func (m *ZkForceExit) GetAccountId() uint64 {
	if m != nil {
		return m.AccountId
	}
	return 0
}

func (m *ZkForceExit) GetSignature() *ZkSignature {
	if m != nil {
		return m.Signature
	}
	return nil
}

type ZkSetPubKey struct {
	AccountId            uint64       `protobuf:"varint,1,opt,name=accountId,proto3" json:"accountId,omitempty"`
	PubKey               *ZkPubKey    `protobuf:"bytes,2,opt,name=pubKey,proto3" json:"pubKey,omitempty"`
	PubKeyTy             uint64       `protobuf:"varint,3,opt,name=pubKeyTy,proto3" json:"pubKeyTy,omitempty"`
	Signature            *ZkSignature `protobuf:"bytes,4,opt,name=signature,proto3" json:"signature,omitempty"`
	ChainAddr            string       `protobuf:"bytes,5,opt,name=chainAddr,proto3" json:"chainAddr,omitempty"`
	XXX_NoUnkeyedLiteral struct{}     `json:"-"`
	XXX_unrecognized     []byte       `json:"-"`
	XXX_sizecache        int32        `json:"-"`
}

func (m *ZkSetPubKey) Reset()         { *m = ZkSetPubKey{} }
func (m *ZkSetPubKey) String() string { return proto.CompactTextString(m) }
func (*ZkSetPubKey) ProtoMessage()    {}
func (*ZkSetPubKey) Descriptor() ([]byte, []int) {
	return fileDescriptor_zksync_95b070c4c0abad18, []int{15}
}
func (m *ZkSetPubKey) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_ZkSetPubKey.Unmarshal(m, b)
}
func (m *ZkSetPubKey) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_ZkSetPubKey.Marshal(b, m, deterministic)
}
func (dst *ZkSetPubKey) XXX_Merge(src proto.Message) {
	xxx_messageInfo_ZkSetPubKey.Merge(dst, src)
}
func (m *ZkSetPubKey) XXX_Size() int {
	return xxx_messageInfo_ZkSetPubKey.Size(m)
}
func (m *ZkSetPubKey) XXX_DiscardUnknown() {
	xxx_messageInfo_ZkSetPubKey.DiscardUnknown(m)
}

var xxx_messageInfo_ZkSetPubKey proto.InternalMessageInfo

func (m *ZkSetPubKey) GetAccountId() uint64 {
	if m != nil {
		return m.AccountId
	}
	return 0
}

func (m *ZkSetPubKey) GetPubKey() *ZkPubKey {
	if m != nil {
		return m.PubKey
	}
	return nil
}

func (m *ZkSetPubKey) GetPubKeyTy() uint64 {
	if m != nil {
		return m.PubKeyTy
	}
	return 0
}

func (m *ZkSetPubKey) GetSignature() *ZkSignature {
	if m != nil {
		return m.Signature
	}
	return nil
}

func (m *ZkSetPubKey) GetChainAddr() string {
	if m != nil {
		return m.ChainAddr
	}
	return ""
}

type ZkFullExit struct {
	TokenId              uint64       `protobuf:"varint,1,opt,name=tokenId,proto3" json:"tokenId,omitempty"`
	AccountId            uint64       `protobuf:"varint,2,opt,name=accountId,proto3" json:"accountId,omitempty"`
	EthPriorityQueueId   int64        `protobuf:"varint,3,opt,name=ethPriorityQueueId,proto3" json:"ethPriorityQueueId,omitempty"`
	Signature            *ZkSignature `protobuf:"bytes,4,opt,name=signature,proto3" json:"signature,omitempty"`
	XXX_NoUnkeyedLiteral struct{}     `json:"-"`
	XXX_unrecognized     []byte       `json:"-"`
	XXX_sizecache        int32        `json:"-"`
}

func (m *ZkFullExit) Reset()         { *m = ZkFullExit{} }
func (m *ZkFullExit) String() string { return proto.CompactTextString(m) }
func (*ZkFullExit) ProtoMessage()    {}
func (*ZkFullExit) Descriptor() ([]byte, []int) {
	return fileDescriptor_zksync_95b070c4c0abad18, []int{16}
}
func (m *ZkFullExit) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_ZkFullExit.Unmarshal(m, b)
}
func (m *ZkFullExit) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_ZkFullExit.Marshal(b, m, deterministic)
}
func (dst *ZkFullExit) XXX_Merge(src proto.Message) {
	xxx_messageInfo_ZkFullExit.Merge(dst, src)
}
func (m *ZkFullExit) XXX_Size() int {
	return xxx_messageInfo_ZkFullExit.Size(m)
}
func (m *ZkFullExit) XXX_DiscardUnknown() {
	xxx_messageInfo_ZkFullExit.DiscardUnknown(m)
}

var xxx_messageInfo_ZkFullExit proto.InternalMessageInfo

func (m *ZkFullExit) GetTokenId() uint64 {
	if m != nil {
		return m.TokenId
	}
	return 0
}

func (m *ZkFullExit) GetAccountId() uint64 {
	if m != nil {
		return m.AccountId
	}
	return 0
}

func (m *ZkFullExit) GetEthPriorityQueueId() int64 {
	if m != nil {
		return m.EthPriorityQueueId
	}
	return 0
}

func (m *ZkFullExit) GetSignature() *ZkSignature {
	if m != nil {
		return m.Signature
	}
	return nil
}

type ZkSwap struct {
	Signature            *ZkSignature `protobuf:"bytes,1,opt,name=signature,proto3" json:"signature,omitempty"`
	XXX_NoUnkeyedLiteral struct{}     `json:"-"`
	XXX_unrecognized     []byte       `json:"-"`
	XXX_sizecache        int32        `json:"-"`
}

func (m *ZkSwap) Reset()         { *m = ZkSwap{} }
func (m *ZkSwap) String() string { return proto.CompactTextString(m) }
func (*ZkSwap) ProtoMessage()    {}
func (*ZkSwap) Descriptor() ([]byte, []int) {
	return fileDescriptor_zksync_95b070c4c0abad18, []int{17}
}
func (m *ZkSwap) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_ZkSwap.Unmarshal(m, b)
}
func (m *ZkSwap) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_ZkSwap.Marshal(b, m, deterministic)
}
func (dst *ZkSwap) XXX_Merge(src proto.Message) {
	xxx_messageInfo_ZkSwap.Merge(dst, src)
}
func (m *ZkSwap) XXX_Size() int {
	return xxx_messageInfo_ZkSwap.Size(m)
}
func (m *ZkSwap) XXX_DiscardUnknown() {
	xxx_messageInfo_ZkSwap.DiscardUnknown(m)
}

var xxx_messageInfo_ZkSwap proto.InternalMessageInfo

func (m *ZkSwap) GetSignature() *ZkSignature {
	if m != nil {
		return m.Signature
	}
	return nil
}

type ZkMintNFT struct {
	FromAccountId        uint64       `protobuf:"varint,1,opt,name=fromAccountId,proto3" json:"fromAccountId,omitempty"`
	RecipientId          uint64       `protobuf:"varint,2,opt,name=recipientId,proto3" json:"recipientId,omitempty"`
	ContentHash          string       `protobuf:"bytes,3,opt,name=contentHash,proto3" json:"contentHash,omitempty"`
	ErcProtocol          uint64       `protobuf:"varint,4,opt,name=ercProtocol,proto3" json:"ercProtocol,omitempty"`
	Amount               uint64       `protobuf:"varint,5,opt,name=amount,proto3" json:"amount,omitempty"`
	Signature            *ZkSignature `protobuf:"bytes,6,opt,name=signature,proto3" json:"signature,omitempty"`
	XXX_NoUnkeyedLiteral struct{}     `json:"-"`
	XXX_unrecognized     []byte       `json:"-"`
	XXX_sizecache        int32        `json:"-"`
}

func (m *ZkMintNFT) Reset()         { *m = ZkMintNFT{} }
func (m *ZkMintNFT) String() string { return proto.CompactTextString(m) }
func (*ZkMintNFT) ProtoMessage()    {}
func (*ZkMintNFT) Descriptor() ([]byte, []int) {
	return fileDescriptor_zksync_95b070c4c0abad18, []int{18}
}
func (m *ZkMintNFT) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_ZkMintNFT.Unmarshal(m, b)
}
func (m *ZkMintNFT) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_ZkMintNFT.Marshal(b, m, deterministic)
}
func (dst *ZkMintNFT) XXX_Merge(src proto.Message) {
	xxx_messageInfo_ZkMintNFT.Merge(dst, src)
}
func (m *ZkMintNFT) XXX_Size() int {
	return xxx_messageInfo_ZkMintNFT.Size(m)
}
func (m *ZkMintNFT) XXX_DiscardUnknown() {
	xxx_messageInfo_ZkMintNFT.DiscardUnknown(m)
}

var xxx_messageInfo_ZkMintNFT proto.InternalMessageInfo

func (m *ZkMintNFT) GetFromAccountId() uint64 {
	if m != nil {
		return m.FromAccountId
	}
	return 0
}

func (m *ZkMintNFT) GetRecipientId() uint64 {
	if m != nil {
		return m.RecipientId
	}
	return 0
}

func (m *ZkMintNFT) GetContentHash() string {
	if m != nil {
		return m.ContentHash
	}
	return ""
}

func (m *ZkMintNFT) GetErcProtocol() uint64 {
	if m != nil {
		return m.ErcProtocol
	}
	return 0
}

func (m *ZkMintNFT) GetAmount() uint64 {
	if m != nil {
		return m.Amount
	}
	return 0
}

func (m *ZkMintNFT) GetSignature() *ZkSignature {
	if m != nil {
		return m.Signature
	}
	return nil
}

type ZkWithdrawNFT struct {
	FromAccountId        uint64       `protobuf:"varint,1,opt,name=fromAccountId,proto3" json:"fromAccountId,omitempty"`
	NFTTokenId           uint64       `protobuf:"varint,2,opt,name=NFTTokenId,proto3" json:"NFTTokenId,omitempty"`
	Amount               uint64       `protobuf:"varint,3,opt,name=amount,proto3" json:"amount,omitempty"`
	Signature            *ZkSignature `protobuf:"bytes,5,opt,name=signature,proto3" json:"signature,omitempty"`
	XXX_NoUnkeyedLiteral struct{}     `json:"-"`
	XXX_unrecognized     []byte       `json:"-"`
	XXX_sizecache        int32        `json:"-"`
}

func (m *ZkWithdrawNFT) Reset()         { *m = ZkWithdrawNFT{} }
func (m *ZkWithdrawNFT) String() string { return proto.CompactTextString(m) }
func (*ZkWithdrawNFT) ProtoMessage()    {}
func (*ZkWithdrawNFT) Descriptor() ([]byte, []int) {
	return fileDescriptor_zksync_95b070c4c0abad18, []int{19}
}
func (m *ZkWithdrawNFT) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_ZkWithdrawNFT.Unmarshal(m, b)
}
func (m *ZkWithdrawNFT) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_ZkWithdrawNFT.Marshal(b, m, deterministic)
}
func (dst *ZkWithdrawNFT) XXX_Merge(src proto.Message) {
	xxx_messageInfo_ZkWithdrawNFT.Merge(dst, src)
}
func (m *ZkWithdrawNFT) XXX_Size() int {
	return xxx_messageInfo_ZkWithdrawNFT.Size(m)
}
func (m *ZkWithdrawNFT) XXX_DiscardUnknown() {
	xxx_messageInfo_ZkWithdrawNFT.DiscardUnknown(m)
}

var xxx_messageInfo_ZkWithdrawNFT proto.InternalMessageInfo

func (m *ZkWithdrawNFT) GetFromAccountId() uint64 {
	if m != nil {
		return m.FromAccountId
	}
	return 0
}

func (m *ZkWithdrawNFT) GetNFTTokenId() uint64 {
	if m != nil {
		return m.NFTTokenId
	}
	return 0
}

func (m *ZkWithdrawNFT) GetAmount() uint64 {
	if m != nil {
		return m.Amount
	}
	return 0
}

func (m *ZkWithdrawNFT) GetSignature() *ZkSignature {
	if m != nil {
		return m.Signature
	}
	return nil
}

type ZkTransferNFT struct {
	FromAccountId        uint64       `protobuf:"varint,1,opt,name=fromAccountId,proto3" json:"fromAccountId,omitempty"`
	RecipientId          uint64       `protobuf:"varint,2,opt,name=recipientId,proto3" json:"recipientId,omitempty"`
	NFTTokenId           uint64       `protobuf:"varint,3,opt,name=NFTTokenId,proto3" json:"NFTTokenId,omitempty"`
	Amount               uint64       `protobuf:"varint,4,opt,name=amount,proto3" json:"amount,omitempty"`
	Signature            *ZkSignature `protobuf:"bytes,6,opt,name=signature,proto3" json:"signature,omitempty"`
	XXX_NoUnkeyedLiteral struct{}     `json:"-"`
	XXX_unrecognized     []byte       `json:"-"`
	XXX_sizecache        int32        `json:"-"`
}

func (m *ZkTransferNFT) Reset()         { *m = ZkTransferNFT{} }
func (m *ZkTransferNFT) String() string { return proto.CompactTextString(m) }
func (*ZkTransferNFT) ProtoMessage()    {}
func (*ZkTransferNFT) Descriptor() ([]byte, []int) {
	return fileDescriptor_zksync_95b070c4c0abad18, []int{20}
}
func (m *ZkTransferNFT) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_ZkTransferNFT.Unmarshal(m, b)
}
func (m *ZkTransferNFT) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_ZkTransferNFT.Marshal(b, m, deterministic)
}
func (dst *ZkTransferNFT) XXX_Merge(src proto.Message) {
	xxx_messageInfo_ZkTransferNFT.Merge(dst, src)
}
func (m *ZkTransferNFT) XXX_Size() int {
	return xxx_messageInfo_ZkTransferNFT.Size(m)
}
func (m *ZkTransferNFT) XXX_DiscardUnknown() {
	xxx_messageInfo_ZkTransferNFT.DiscardUnknown(m)
}

var xxx_messageInfo_ZkTransferNFT proto.InternalMessageInfo

func (m *ZkTransferNFT) GetFromAccountId() uint64 {
	if m != nil {
		return m.FromAccountId
	}
	return 0
}

func (m *ZkTransferNFT) GetRecipientId() uint64 {
	if m != nil {
		return m.RecipientId
	}
	return 0
}

func (m *ZkTransferNFT) GetNFTTokenId() uint64 {
	if m != nil {
		return m.NFTTokenId
	}
	return 0
}

func (m *ZkTransferNFT) GetAmount() uint64 {
	if m != nil {
		return m.Amount
	}
	return 0
}

func (m *ZkTransferNFT) GetSignature() *ZkSignature {
	if m != nil {
		return m.Signature
	}
	return nil
}

type ZkNFTTokenStatus struct {
	Id                   uint64   `protobuf:"varint,1,opt,name=Id,proto3" json:"Id,omitempty"`
	CreatorId            uint64   `protobuf:"varint,2,opt,name=creatorId,proto3" json:"creatorId,omitempty"`
	CreatorEthAddr       string   `protobuf:"bytes,3,opt,name=creatorEthAddr,proto3" json:"creatorEthAddr,omitempty"`
	CreatorSerialId      uint64   `protobuf:"varint,4,opt,name=creatorSerialId,proto3" json:"creatorSerialId,omitempty"`
	ErcProtocol          uint64   `protobuf:"varint,5,opt,name=ercProtocol,proto3" json:"ercProtocol,omitempty"`
	MintAmount           uint64   `protobuf:"varint,6,opt,name=mintAmount,proto3" json:"mintAmount,omitempty"`
	ContentHash          string   `protobuf:"bytes,7,opt,name=contentHash,proto3" json:"contentHash,omitempty"`
	BurnedAmount         uint64   `protobuf:"varint,8,opt,name=burnedAmount,proto3" json:"burnedAmount,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *ZkNFTTokenStatus) Reset()         { *m = ZkNFTTokenStatus{} }
func (m *ZkNFTTokenStatus) String() string { return proto.CompactTextString(m) }
func (*ZkNFTTokenStatus) ProtoMessage()    {}
func (*ZkNFTTokenStatus) Descriptor() ([]byte, []int) {
	return fileDescriptor_zksync_95b070c4c0abad18, []int{21}
}
func (m *ZkNFTTokenStatus) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_ZkNFTTokenStatus.Unmarshal(m, b)
}
func (m *ZkNFTTokenStatus) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_ZkNFTTokenStatus.Marshal(b, m, deterministic)
}
func (dst *ZkNFTTokenStatus) XXX_Merge(src proto.Message) {
	xxx_messageInfo_ZkNFTTokenStatus.Merge(dst, src)
}
func (m *ZkNFTTokenStatus) XXX_Size() int {
	return xxx_messageInfo_ZkNFTTokenStatus.Size(m)
}
func (m *ZkNFTTokenStatus) XXX_DiscardUnknown() {
	xxx_messageInfo_ZkNFTTokenStatus.DiscardUnknown(m)
}

var xxx_messageInfo_ZkNFTTokenStatus proto.InternalMessageInfo

func (m *ZkNFTTokenStatus) GetId() uint64 {
	if m != nil {
		return m.Id
	}
	return 0
}

func (m *ZkNFTTokenStatus) GetCreatorId() uint64 {
	if m != nil {
		return m.CreatorId
	}
	return 0
}

func (m *ZkNFTTokenStatus) GetCreatorEthAddr() string {
	if m != nil {
		return m.CreatorEthAddr
	}
	return ""
}

func (m *ZkNFTTokenStatus) GetCreatorSerialId() uint64 {
	if m != nil {
		return m.CreatorSerialId
	}
	return 0
}

func (m *ZkNFTTokenStatus) GetErcProtocol() uint64 {
	if m != nil {
		return m.ErcProtocol
	}
	return 0
}

func (m *ZkNFTTokenStatus) GetMintAmount() uint64 {
	if m != nil {
		return m.MintAmount
	}
	return 0
}

func (m *ZkNFTTokenStatus) GetContentHash() string {
	if m != nil {
		return m.ContentHash
	}
	return ""
}

func (m *ZkNFTTokenStatus) GetBurnedAmount() uint64 {
	if m != nil {
		return m.BurnedAmount
	}
	return 0
}

// 电路验证key
type ZkVerifyKey struct {
	Key                  string   `protobuf:"bytes,1,opt,name=key,proto3" json:"key,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *ZkVerifyKey) Reset()         { *m = ZkVerifyKey{} }
func (m *ZkVerifyKey) String() string { return proto.CompactTextString(m) }
func (*ZkVerifyKey) ProtoMessage()    {}
func (*ZkVerifyKey) Descriptor() ([]byte, []int) {
	return fileDescriptor_zksync_95b070c4c0abad18, []int{22}
}
func (m *ZkVerifyKey) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_ZkVerifyKey.Unmarshal(m, b)
}
func (m *ZkVerifyKey) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_ZkVerifyKey.Marshal(b, m, deterministic)
}
func (dst *ZkVerifyKey) XXX_Merge(src proto.Message) {
	xxx_messageInfo_ZkVerifyKey.Merge(dst, src)
}
func (m *ZkVerifyKey) XXX_Size() int {
	return xxx_messageInfo_ZkVerifyKey.Size(m)
}
func (m *ZkVerifyKey) XXX_DiscardUnknown() {
	xxx_messageInfo_ZkVerifyKey.DiscardUnknown(m)
}

var xxx_messageInfo_ZkVerifyKey proto.InternalMessageInfo

func (m *ZkVerifyKey) GetKey() string {
	if m != nil {
		return m.Key
	}
	return ""
}

type ReceiptSetVerifyKey struct {
	Prev                 *ZkVerifyKey `protobuf:"bytes,1,opt,name=prev,proto3" json:"prev,omitempty"`
	Current              *ZkVerifyKey `protobuf:"bytes,2,opt,name=current,proto3" json:"current,omitempty"`
	XXX_NoUnkeyedLiteral struct{}     `json:"-"`
	XXX_unrecognized     []byte       `json:"-"`
	XXX_sizecache        int32        `json:"-"`
}

func (m *ReceiptSetVerifyKey) Reset()         { *m = ReceiptSetVerifyKey{} }
func (m *ReceiptSetVerifyKey) String() string { return proto.CompactTextString(m) }
func (*ReceiptSetVerifyKey) ProtoMessage()    {}
func (*ReceiptSetVerifyKey) Descriptor() ([]byte, []int) {
	return fileDescriptor_zksync_95b070c4c0abad18, []int{23}
}
func (m *ReceiptSetVerifyKey) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_ReceiptSetVerifyKey.Unmarshal(m, b)
}
func (m *ReceiptSetVerifyKey) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_ReceiptSetVerifyKey.Marshal(b, m, deterministic)
}
func (dst *ReceiptSetVerifyKey) XXX_Merge(src proto.Message) {
	xxx_messageInfo_ReceiptSetVerifyKey.Merge(dst, src)
}
func (m *ReceiptSetVerifyKey) XXX_Size() int {
	return xxx_messageInfo_ReceiptSetVerifyKey.Size(m)
}
func (m *ReceiptSetVerifyKey) XXX_DiscardUnknown() {
	xxx_messageInfo_ReceiptSetVerifyKey.DiscardUnknown(m)
}

var xxx_messageInfo_ReceiptSetVerifyKey proto.InternalMessageInfo

func (m *ReceiptSetVerifyKey) GetPrev() *ZkVerifyKey {
	if m != nil {
		return m.Prev
	}
	return nil
}

func (m *ReceiptSetVerifyKey) GetCurrent() *ZkVerifyKey {
	if m != nil {
		return m.Current
	}
	return nil
}

// commit proof tx data
type ZkCommitProof struct {
	BlockStart  uint64 `protobuf:"varint,1,opt,name=blockStart,proto3" json:"blockStart,omitempty"`
	IndexStart  uint64 `protobuf:"varint,2,opt,name=indexStart,proto3" json:"indexStart,omitempty"`
	BlockEnd    uint64 `protobuf:"varint,3,opt,name=blockEnd,proto3" json:"blockEnd,omitempty"`
	IndexEnd    uint64 `protobuf:"varint,4,opt,name=indexEnd,proto3" json:"indexEnd,omitempty"`
	OpIndex     uint32 `protobuf:"varint,5,opt,name=opIndex,proto3" json:"opIndex,omitempty"`
	OldTreeRoot string `protobuf:"bytes,6,opt,name=oldTreeRoot,proto3" json:"oldTreeRoot,omitempty"`
	NewTreeRoot string `protobuf:"bytes,7,opt,name=newTreeRoot,proto3" json:"newTreeRoot,omitempty"`
	// proof serialized public input
	PublicInput string `protobuf:"bytes,8,opt,name=publicInput,proto3" json:"publicInput,omitempty"`
	Proof       string `protobuf:"bytes,9,opt,name=proof,proto3" json:"proof,omitempty"`
	// all tx pub datas
	PubDatas        []string `protobuf:"bytes,10,rep,name=pubDatas,proto3" json:"pubDatas,omitempty"`
	OnChainPubDatas []string `protobuf:"bytes,11,rep,name=onChainPubDatas,proto3" json:"onChainPubDatas,omitempty"`
	ProofId         uint64   `protobuf:"varint,12,opt,name=proofId,proto3" json:"proofId,omitempty"`
	// 包含onChainPubdata的proof排序
	OnChainProofId uint64 `protobuf:"varint,13,opt,name=onChainProofId,proto3" json:"onChainProofId,omitempty"`
	// commit时候的blockHeight,localdb会填充
	CommitBlockHeight    int64    `protobuf:"varint,14,opt,name=commitBlockHeight,proto3" json:"commitBlockHeight,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *ZkCommitProof) Reset()         { *m = ZkCommitProof{} }
func (m *ZkCommitProof) String() string { return proto.CompactTextString(m) }
func (*ZkCommitProof) ProtoMessage()    {}
func (*ZkCommitProof) Descriptor() ([]byte, []int) {
	return fileDescriptor_zksync_95b070c4c0abad18, []int{24}
}
func (m *ZkCommitProof) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_ZkCommitProof.Unmarshal(m, b)
}
func (m *ZkCommitProof) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_ZkCommitProof.Marshal(b, m, deterministic)
}
func (dst *ZkCommitProof) XXX_Merge(src proto.Message) {
	xxx_messageInfo_ZkCommitProof.Merge(dst, src)
}
func (m *ZkCommitProof) XXX_Size() int {
	return xxx_messageInfo_ZkCommitProof.Size(m)
}
func (m *ZkCommitProof) XXX_DiscardUnknown() {
	xxx_messageInfo_ZkCommitProof.DiscardUnknown(m)
}

var xxx_messageInfo_ZkCommitProof proto.InternalMessageInfo

func (m *ZkCommitProof) GetBlockStart() uint64 {
	if m != nil {
		return m.BlockStart
	}
	return 0
}

func (m *ZkCommitProof) GetIndexStart() uint64 {
	if m != nil {
		return m.IndexStart
	}
	return 0
}

func (m *ZkCommitProof) GetBlockEnd() uint64 {
	if m != nil {
		return m.BlockEnd
	}
	return 0
}

func (m *ZkCommitProof) GetIndexEnd() uint64 {
	if m != nil {
		return m.IndexEnd
	}
	return 0
}

func (m *ZkCommitProof) GetOpIndex() uint32 {
	if m != nil {
		return m.OpIndex
	}
	return 0
}

func (m *ZkCommitProof) GetOldTreeRoot() string {
	if m != nil {
		return m.OldTreeRoot
	}
	return ""
}

func (m *ZkCommitProof) GetNewTreeRoot() string {
	if m != nil {
		return m.NewTreeRoot
	}
	return ""
}

func (m *ZkCommitProof) GetPublicInput() string {
	if m != nil {
		return m.PublicInput
	}
	return ""
}

func (m *ZkCommitProof) GetProof() string {
	if m != nil {
		return m.Proof
	}
	return ""
}

func (m *ZkCommitProof) GetPubDatas() []string {
	if m != nil {
		return m.PubDatas
	}
	return nil
}

func (m *ZkCommitProof) GetOnChainPubDatas() []string {
	if m != nil {
		return m.OnChainPubDatas
	}
	return nil
}

func (m *ZkCommitProof) GetProofId() uint64 {
	if m != nil {
		return m.ProofId
	}
	return 0
}

func (m *ZkCommitProof) GetOnChainProofId() uint64 {
	if m != nil {
		return m.OnChainProofId
	}
	return 0
}

func (m *ZkCommitProof) GetCommitBlockHeight() int64 {
	if m != nil {
		return m.CommitBlockHeight
	}
	return 0
}

// commit proof stat, pubdata保存到localdb
type CommitProofState struct {
	BlockStart  uint64 `protobuf:"varint,1,opt,name=blockStart,proto3" json:"blockStart,omitempty"`
	IndexStart  uint64 `protobuf:"varint,2,opt,name=indexStart,proto3" json:"indexStart,omitempty"`
	BlockEnd    uint64 `protobuf:"varint,3,opt,name=blockEnd,proto3" json:"blockEnd,omitempty"`
	IndexEnd    uint64 `protobuf:"varint,4,opt,name=indexEnd,proto3" json:"indexEnd,omitempty"`
	OpIndex     uint32 `protobuf:"varint,5,opt,name=opIndex,proto3" json:"opIndex,omitempty"`
	OldTreeRoot string `protobuf:"bytes,6,opt,name=oldTreeRoot,proto3" json:"oldTreeRoot,omitempty"`
	NewTreeRoot string `protobuf:"bytes,7,opt,name=newTreeRoot,proto3" json:"newTreeRoot,omitempty"`
	// proof serialized public input
	PublicInput    string `protobuf:"bytes,8,opt,name=publicInput,proto3" json:"publicInput,omitempty"`
	Proof          string `protobuf:"bytes,9,opt,name=proof,proto3" json:"proof,omitempty"`
	ProofId        uint64 `protobuf:"varint,10,opt,name=proofId,proto3" json:"proofId,omitempty"`
	OnChainProofId uint64 `protobuf:"varint,11,opt,name=onChainProofId,proto3" json:"onChainProofId,omitempty"`
	// commit时候的blockHeight
	CommitBlockHeight    int64    `protobuf:"varint,12,opt,name=commitBlockHeight,proto3" json:"commitBlockHeight,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *CommitProofState) Reset()         { *m = CommitProofState{} }
func (m *CommitProofState) String() string { return proto.CompactTextString(m) }
func (*CommitProofState) ProtoMessage()    {}
func (*CommitProofState) Descriptor() ([]byte, []int) {
	return fileDescriptor_zksync_95b070c4c0abad18, []int{25}
}
func (m *CommitProofState) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_CommitProofState.Unmarshal(m, b)
}
func (m *CommitProofState) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_CommitProofState.Marshal(b, m, deterministic)
}
func (dst *CommitProofState) XXX_Merge(src proto.Message) {
	xxx_messageInfo_CommitProofState.Merge(dst, src)
}
func (m *CommitProofState) XXX_Size() int {
	return xxx_messageInfo_CommitProofState.Size(m)
}
func (m *CommitProofState) XXX_DiscardUnknown() {
	xxx_messageInfo_CommitProofState.DiscardUnknown(m)
}

var xxx_messageInfo_CommitProofState proto.InternalMessageInfo

func (m *CommitProofState) GetBlockStart() uint64 {
	if m != nil {
		return m.BlockStart
	}
	return 0
}

func (m *CommitProofState) GetIndexStart() uint64 {
	if m != nil {
		return m.IndexStart
	}
	return 0
}

func (m *CommitProofState) GetBlockEnd() uint64 {
	if m != nil {
		return m.BlockEnd
	}
	return 0
}

func (m *CommitProofState) GetIndexEnd() uint64 {
	if m != nil {
		return m.IndexEnd
	}
	return 0
}

func (m *CommitProofState) GetOpIndex() uint32 {
	if m != nil {
		return m.OpIndex
	}
	return 0
}

func (m *CommitProofState) GetOldTreeRoot() string {
	if m != nil {
		return m.OldTreeRoot
	}
	return ""
}

func (m *CommitProofState) GetNewTreeRoot() string {
	if m != nil {
		return m.NewTreeRoot
	}
	return ""
}

func (m *CommitProofState) GetPublicInput() string {
	if m != nil {
		return m.PublicInput
	}
	return ""
}

func (m *CommitProofState) GetProof() string {
	if m != nil {
		return m.Proof
	}
	return ""
}

func (m *CommitProofState) GetProofId() uint64 {
	if m != nil {
		return m.ProofId
	}
	return 0
}

func (m *CommitProofState) GetOnChainProofId() uint64 {
	if m != nil {
		return m.OnChainProofId
	}
	return 0
}

func (m *CommitProofState) GetCommitBlockHeight() int64 {
	if m != nil {
		return m.CommitBlockHeight
	}
	return 0
}

type LastOnChainProof struct {
	ProofId              uint64   `protobuf:"varint,1,opt,name=proofId,proto3" json:"proofId,omitempty"`
	OnChainProofId       uint64   `protobuf:"varint,2,opt,name=onChainProofId,proto3" json:"onChainProofId,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *LastOnChainProof) Reset()         { *m = LastOnChainProof{} }
func (m *LastOnChainProof) String() string { return proto.CompactTextString(m) }
func (*LastOnChainProof) ProtoMessage()    {}
func (*LastOnChainProof) Descriptor() ([]byte, []int) {
	return fileDescriptor_zksync_95b070c4c0abad18, []int{26}
}
func (m *LastOnChainProof) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_LastOnChainProof.Unmarshal(m, b)
}
func (m *LastOnChainProof) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_LastOnChainProof.Marshal(b, m, deterministic)
}
func (dst *LastOnChainProof) XXX_Merge(src proto.Message) {
	xxx_messageInfo_LastOnChainProof.Merge(dst, src)
}
func (m *LastOnChainProof) XXX_Size() int {
	return xxx_messageInfo_LastOnChainProof.Size(m)
}
func (m *LastOnChainProof) XXX_DiscardUnknown() {
	xxx_messageInfo_LastOnChainProof.DiscardUnknown(m)
}

var xxx_messageInfo_LastOnChainProof proto.InternalMessageInfo

func (m *LastOnChainProof) GetProofId() uint64 {
	if m != nil {
		return m.ProofId
	}
	return 0
}

func (m *LastOnChainProof) GetOnChainProofId() uint64 {
	if m != nil {
		return m.OnChainProofId
	}
	return 0
}

type ReceiptCommitProof struct {
	Prev                 *CommitProofState `protobuf:"bytes,1,opt,name=prev,proto3" json:"prev,omitempty"`
	Current              *CommitProofState `protobuf:"bytes,2,opt,name=current,proto3" json:"current,omitempty"`
	XXX_NoUnkeyedLiteral struct{}          `json:"-"`
	XXX_unrecognized     []byte            `json:"-"`
	XXX_sizecache        int32             `json:"-"`
}

func (m *ReceiptCommitProof) Reset()         { *m = ReceiptCommitProof{} }
func (m *ReceiptCommitProof) String() string { return proto.CompactTextString(m) }
func (*ReceiptCommitProof) ProtoMessage()    {}
func (*ReceiptCommitProof) Descriptor() ([]byte, []int) {
	return fileDescriptor_zksync_95b070c4c0abad18, []int{27}
}
func (m *ReceiptCommitProof) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_ReceiptCommitProof.Unmarshal(m, b)
}
func (m *ReceiptCommitProof) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_ReceiptCommitProof.Marshal(b, m, deterministic)
}
func (dst *ReceiptCommitProof) XXX_Merge(src proto.Message) {
	xxx_messageInfo_ReceiptCommitProof.Merge(dst, src)
}
func (m *ReceiptCommitProof) XXX_Size() int {
	return xxx_messageInfo_ReceiptCommitProof.Size(m)
}
func (m *ReceiptCommitProof) XXX_DiscardUnknown() {
	xxx_messageInfo_ReceiptCommitProof.DiscardUnknown(m)
}

var xxx_messageInfo_ReceiptCommitProof proto.InternalMessageInfo

func (m *ReceiptCommitProof) GetPrev() *CommitProofState {
	if m != nil {
		return m.Prev
	}
	return nil
}

func (m *ReceiptCommitProof) GetCurrent() *CommitProofState {
	if m != nil {
		return m.Current
	}
	return nil
}

// 电路验证者名单
type ZkVerifier struct {
	Verifiers            []string `protobuf:"bytes,1,rep,name=verifiers,proto3" json:"verifiers,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *ZkVerifier) Reset()         { *m = ZkVerifier{} }
func (m *ZkVerifier) String() string { return proto.CompactTextString(m) }
func (*ZkVerifier) ProtoMessage()    {}
func (*ZkVerifier) Descriptor() ([]byte, []int) {
	return fileDescriptor_zksync_95b070c4c0abad18, []int{28}
}
func (m *ZkVerifier) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_ZkVerifier.Unmarshal(m, b)
}
func (m *ZkVerifier) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_ZkVerifier.Marshal(b, m, deterministic)
}
func (dst *ZkVerifier) XXX_Merge(src proto.Message) {
	xxx_messageInfo_ZkVerifier.Merge(dst, src)
}
func (m *ZkVerifier) XXX_Size() int {
	return xxx_messageInfo_ZkVerifier.Size(m)
}
func (m *ZkVerifier) XXX_DiscardUnknown() {
	xxx_messageInfo_ZkVerifier.DiscardUnknown(m)
}

var xxx_messageInfo_ZkVerifier proto.InternalMessageInfo

func (m *ZkVerifier) GetVerifiers() []string {
	if m != nil {
		return m.Verifiers
	}
	return nil
}

type ReceiptSetVerifier struct {
	Prev                 *ZkVerifier `protobuf:"bytes,1,opt,name=prev,proto3" json:"prev,omitempty"`
	Current              *ZkVerifier `protobuf:"bytes,2,opt,name=current,proto3" json:"current,omitempty"`
	XXX_NoUnkeyedLiteral struct{}    `json:"-"`
	XXX_unrecognized     []byte      `json:"-"`
	XXX_sizecache        int32       `json:"-"`
}

func (m *ReceiptSetVerifier) Reset()         { *m = ReceiptSetVerifier{} }
func (m *ReceiptSetVerifier) String() string { return proto.CompactTextString(m) }
func (*ReceiptSetVerifier) ProtoMessage()    {}
func (*ReceiptSetVerifier) Descriptor() ([]byte, []int) {
	return fileDescriptor_zksync_95b070c4c0abad18, []int{29}
}
func (m *ReceiptSetVerifier) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_ReceiptSetVerifier.Unmarshal(m, b)
}
func (m *ReceiptSetVerifier) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_ReceiptSetVerifier.Marshal(b, m, deterministic)
}
func (dst *ReceiptSetVerifier) XXX_Merge(src proto.Message) {
	xxx_messageInfo_ReceiptSetVerifier.Merge(dst, src)
}
func (m *ReceiptSetVerifier) XXX_Size() int {
	return xxx_messageInfo_ReceiptSetVerifier.Size(m)
}
func (m *ReceiptSetVerifier) XXX_DiscardUnknown() {
	xxx_messageInfo_ReceiptSetVerifier.DiscardUnknown(m)
}

var xxx_messageInfo_ReceiptSetVerifier proto.InternalMessageInfo

func (m *ReceiptSetVerifier) GetPrev() *ZkVerifier {
	if m != nil {
		return m.Prev
	}
	return nil
}

func (m *ReceiptSetVerifier) GetCurrent() *ZkVerifier {
	if m != nil {
		return m.Current
	}
	return nil
}

type ZkSetFee struct {
	TokenId              uint64   `protobuf:"varint,1,opt,name=tokenId,proto3" json:"tokenId,omitempty"`
	Amount               string   `protobuf:"bytes,2,opt,name=amount,proto3" json:"amount,omitempty"`
	ActionTy             int32    `protobuf:"varint,3,opt,name=actionTy,proto3" json:"actionTy,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *ZkSetFee) Reset()         { *m = ZkSetFee{} }
func (m *ZkSetFee) String() string { return proto.CompactTextString(m) }
func (*ZkSetFee) ProtoMessage()    {}
func (*ZkSetFee) Descriptor() ([]byte, []int) {
	return fileDescriptor_zksync_95b070c4c0abad18, []int{30}
}
func (m *ZkSetFee) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_ZkSetFee.Unmarshal(m, b)
}
func (m *ZkSetFee) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_ZkSetFee.Marshal(b, m, deterministic)
}
func (dst *ZkSetFee) XXX_Merge(src proto.Message) {
	xxx_messageInfo_ZkSetFee.Merge(dst, src)
}
func (m *ZkSetFee) XXX_Size() int {
	return xxx_messageInfo_ZkSetFee.Size(m)
}
func (m *ZkSetFee) XXX_DiscardUnknown() {
	xxx_messageInfo_ZkSetFee.DiscardUnknown(m)
}

var xxx_messageInfo_ZkSetFee proto.InternalMessageInfo

func (m *ZkSetFee) GetTokenId() uint64 {
	if m != nil {
		return m.TokenId
	}
	return 0
}

func (m *ZkSetFee) GetAmount() string {
	if m != nil {
		return m.Amount
	}
	return ""
}

func (m *ZkSetFee) GetActionTy() int32 {
	if m != nil {
		return m.ActionTy
	}
	return 0
}

type ReceiptSetFee struct {
	TokenId              uint64   `protobuf:"varint,1,opt,name=tokenId,proto3" json:"tokenId,omitempty"`
	ActionTy             int32    `protobuf:"varint,2,opt,name=actionTy,proto3" json:"actionTy,omitempty"`
	PrevAmount           string   `protobuf:"bytes,3,opt,name=prevAmount,proto3" json:"prevAmount,omitempty"`
	CurrentAmount        string   `protobuf:"bytes,4,opt,name=currentAmount,proto3" json:"currentAmount,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *ReceiptSetFee) Reset()         { *m = ReceiptSetFee{} }
func (m *ReceiptSetFee) String() string { return proto.CompactTextString(m) }
func (*ReceiptSetFee) ProtoMessage()    {}
func (*ReceiptSetFee) Descriptor() ([]byte, []int) {
	return fileDescriptor_zksync_95b070c4c0abad18, []int{31}
}
func (m *ReceiptSetFee) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_ReceiptSetFee.Unmarshal(m, b)
}
func (m *ReceiptSetFee) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_ReceiptSetFee.Marshal(b, m, deterministic)
}
func (dst *ReceiptSetFee) XXX_Merge(src proto.Message) {
	xxx_messageInfo_ReceiptSetFee.Merge(dst, src)
}
func (m *ReceiptSetFee) XXX_Size() int {
	return xxx_messageInfo_ReceiptSetFee.Size(m)
}
func (m *ReceiptSetFee) XXX_DiscardUnknown() {
	xxx_messageInfo_ReceiptSetFee.DiscardUnknown(m)
}

var xxx_messageInfo_ReceiptSetFee proto.InternalMessageInfo

func (m *ReceiptSetFee) GetTokenId() uint64 {
	if m != nil {
		return m.TokenId
	}
	return 0
}

func (m *ReceiptSetFee) GetActionTy() int32 {
	if m != nil {
		return m.ActionTy
	}
	return 0
}

func (m *ReceiptSetFee) GetPrevAmount() string {
	if m != nil {
		return m.PrevAmount
	}
	return ""
}

func (m *ReceiptSetFee) GetCurrentAmount() string {
	if m != nil {
		return m.CurrentAmount
	}
	return ""
}

// zk relayer operators
type RelayerOperators struct {
	Operators            []string `protobuf:"bytes,1,rep,name=operators,proto3" json:"operators,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *RelayerOperators) Reset()         { *m = RelayerOperators{} }
func (m *RelayerOperators) String() string { return proto.CompactTextString(m) }
func (*RelayerOperators) ProtoMessage()    {}
func (*RelayerOperators) Descriptor() ([]byte, []int) {
	return fileDescriptor_zksync_95b070c4c0abad18, []int{32}
}
func (m *RelayerOperators) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_RelayerOperators.Unmarshal(m, b)
}
func (m *RelayerOperators) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_RelayerOperators.Marshal(b, m, deterministic)
}
func (dst *RelayerOperators) XXX_Merge(src proto.Message) {
	xxx_messageInfo_RelayerOperators.Merge(dst, src)
}
func (m *RelayerOperators) XXX_Size() int {
	return xxx_messageInfo_RelayerOperators.Size(m)
}
func (m *RelayerOperators) XXX_DiscardUnknown() {
	xxx_messageInfo_RelayerOperators.DiscardUnknown(m)
}

var xxx_messageInfo_RelayerOperators proto.InternalMessageInfo

func (m *RelayerOperators) GetOperators() []string {
	if m != nil {
		return m.Operators
	}
	return nil
}

// leaf merkle proof票据日志
type ZkReceiptLeaf struct {
	Leaf                 *Leaf            `protobuf:"bytes,1,opt,name=leaf,proto3" json:"leaf,omitempty"`
	Token                *TokenBalance    `protobuf:"bytes,2,opt,name=token,proto3" json:"token,omitempty"`
	TreeProof            *MerkleTreeProof `protobuf:"bytes,3,opt,name=treeProof,proto3" json:"treeProof,omitempty"`
	TokenProof           *MerkleTreeProof `protobuf:"bytes,4,opt,name=tokenProof,proto3" json:"tokenProof,omitempty"`
	XXX_NoUnkeyedLiteral struct{}         `json:"-"`
	XXX_unrecognized     []byte           `json:"-"`
	XXX_sizecache        int32            `json:"-"`
}

func (m *ZkReceiptLeaf) Reset()         { *m = ZkReceiptLeaf{} }
func (m *ZkReceiptLeaf) String() string { return proto.CompactTextString(m) }
func (*ZkReceiptLeaf) ProtoMessage()    {}
func (*ZkReceiptLeaf) Descriptor() ([]byte, []int) {
	return fileDescriptor_zksync_95b070c4c0abad18, []int{33}
}
func (m *ZkReceiptLeaf) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_ZkReceiptLeaf.Unmarshal(m, b)
}
func (m *ZkReceiptLeaf) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_ZkReceiptLeaf.Marshal(b, m, deterministic)
}
func (dst *ZkReceiptLeaf) XXX_Merge(src proto.Message) {
	xxx_messageInfo_ZkReceiptLeaf.Merge(dst, src)
}
func (m *ZkReceiptLeaf) XXX_Size() int {
	return xxx_messageInfo_ZkReceiptLeaf.Size(m)
}
func (m *ZkReceiptLeaf) XXX_DiscardUnknown() {
	xxx_messageInfo_ZkReceiptLeaf.DiscardUnknown(m)
}

var xxx_messageInfo_ZkReceiptLeaf proto.InternalMessageInfo

func (m *ZkReceiptLeaf) GetLeaf() *Leaf {
	if m != nil {
		return m.Leaf
	}
	return nil
}

func (m *ZkReceiptLeaf) GetToken() *TokenBalance {
	if m != nil {
		return m.Token
	}
	return nil
}

func (m *ZkReceiptLeaf) GetTreeProof() *MerkleTreeProof {
	if m != nil {
		return m.TreeProof
	}
	return nil
}

func (m *ZkReceiptLeaf) GetTokenProof() *MerkleTreeProof {
	if m != nil {
		return m.TokenProof
	}
	return nil
}

type ZkQueryReq struct {
	AccountId            uint64   `protobuf:"varint,1,opt,name=accountId,proto3" json:"accountId,omitempty"`
	BlockHeight          uint64   `protobuf:"varint,2,opt,name=blockHeight,proto3" json:"blockHeight,omitempty"`
	TxIndex              uint32   `protobuf:"varint,3,opt,name=txIndex,proto3" json:"txIndex,omitempty"`
	EthAddress           string   `protobuf:"bytes,4,opt,name=ethAddress,proto3" json:"ethAddress,omitempty"`
	Chain33Addr          string   `protobuf:"bytes,5,opt,name=chain33Addr,proto3" json:"chain33Addr,omitempty"`
	TokenSymbol          string   `protobuf:"bytes,6,opt,name=tokenSymbol,proto3" json:"tokenSymbol,omitempty"`
	Chain33WalletAddr    string   `protobuf:"bytes,7,opt,name=chain33WalletAddr,proto3" json:"chain33WalletAddr,omitempty"`
	TokenId              uint64   `protobuf:"varint,8,opt,name=tokenId,proto3" json:"tokenId,omitempty"`
	TxHash               string   `protobuf:"bytes,9,opt,name=txHash,proto3" json:"txHash,omitempty"`
	ProofId              uint64   `protobuf:"varint,10,opt,name=proofId,proto3" json:"proofId,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *ZkQueryReq) Reset()         { *m = ZkQueryReq{} }
func (m *ZkQueryReq) String() string { return proto.CompactTextString(m) }
func (*ZkQueryReq) ProtoMessage()    {}
func (*ZkQueryReq) Descriptor() ([]byte, []int) {
	return fileDescriptor_zksync_95b070c4c0abad18, []int{34}
}
func (m *ZkQueryReq) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_ZkQueryReq.Unmarshal(m, b)
}
func (m *ZkQueryReq) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_ZkQueryReq.Marshal(b, m, deterministic)
}
func (dst *ZkQueryReq) XXX_Merge(src proto.Message) {
	xxx_messageInfo_ZkQueryReq.Merge(dst, src)
}
func (m *ZkQueryReq) XXX_Size() int {
	return xxx_messageInfo_ZkQueryReq.Size(m)
}
func (m *ZkQueryReq) XXX_DiscardUnknown() {
	xxx_messageInfo_ZkQueryReq.DiscardUnknown(m)
}

var xxx_messageInfo_ZkQueryReq proto.InternalMessageInfo

func (m *ZkQueryReq) GetAccountId() uint64 {
	if m != nil {
		return m.AccountId
	}
	return 0
}

func (m *ZkQueryReq) GetBlockHeight() uint64 {
	if m != nil {
		return m.BlockHeight
	}
	return 0
}

func (m *ZkQueryReq) GetTxIndex() uint32 {
	if m != nil {
		return m.TxIndex
	}
	return 0
}

func (m *ZkQueryReq) GetEthAddress() string {
	if m != nil {
		return m.EthAddress
	}
	return ""
}

func (m *ZkQueryReq) GetChain33Addr() string {
	if m != nil {
		return m.Chain33Addr
	}
	return ""
}

func (m *ZkQueryReq) GetTokenSymbol() string {
	if m != nil {
		return m.TokenSymbol
	}
	return ""
}

func (m *ZkQueryReq) GetChain33WalletAddr() string {
	if m != nil {
		return m.Chain33WalletAddr
	}
	return ""
}

func (m *ZkQueryReq) GetTokenId() uint64 {
	if m != nil {
		return m.TokenId
	}
	return 0
}

func (m *ZkQueryReq) GetTxHash() string {
	if m != nil {
		return m.TxHash
	}
	return ""
}

func (m *ZkQueryReq) GetProofId() uint64 {
	if m != nil {
		return m.ProofId
	}
	return 0
}

type ZkQueryResp struct {
	OperationInfos       []*OperationInfo `protobuf:"bytes,1,rep,name=operationInfos,proto3" json:"operationInfos,omitempty"`
	Leaves               []*Leaf          `protobuf:"bytes,2,rep,name=leaves,proto3" json:"leaves,omitempty"`
	TokenBalances        []*TokenBalance  `protobuf:"bytes,3,rep,name=tokenBalances,proto3" json:"tokenBalances,omitempty"`
	XXX_NoUnkeyedLiteral struct{}         `json:"-"`
	XXX_unrecognized     []byte           `json:"-"`
	XXX_sizecache        int32            `json:"-"`
}

func (m *ZkQueryResp) Reset()         { *m = ZkQueryResp{} }
func (m *ZkQueryResp) String() string { return proto.CompactTextString(m) }
func (*ZkQueryResp) ProtoMessage()    {}
func (*ZkQueryResp) Descriptor() ([]byte, []int) {
	return fileDescriptor_zksync_95b070c4c0abad18, []int{35}
}
func (m *ZkQueryResp) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_ZkQueryResp.Unmarshal(m, b)
}
func (m *ZkQueryResp) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_ZkQueryResp.Marshal(b, m, deterministic)
}
func (dst *ZkQueryResp) XXX_Merge(src proto.Message) {
	xxx_messageInfo_ZkQueryResp.Merge(dst, src)
}
func (m *ZkQueryResp) XXX_Size() int {
	return xxx_messageInfo_ZkQueryResp.Size(m)
}
func (m *ZkQueryResp) XXX_DiscardUnknown() {
	xxx_messageInfo_ZkQueryResp.DiscardUnknown(m)
}

var xxx_messageInfo_ZkQueryResp proto.InternalMessageInfo

func (m *ZkQueryResp) GetOperationInfos() []*OperationInfo {
	if m != nil {
		return m.OperationInfos
	}
	return nil
}

func (m *ZkQueryResp) GetLeaves() []*Leaf {
	if m != nil {
		return m.Leaves
	}
	return nil
}

func (m *ZkQueryResp) GetTokenBalances() []*TokenBalance {
	if m != nil {
		return m.TokenBalances
	}
	return nil
}

type ZkReceiptLog struct {
	OperationInfo        *OperationInfo    `protobuf:"bytes,1,opt,name=operationInfo,proto3" json:"operationInfo,omitempty"`
	LocalKvs             []*types.KeyValue `protobuf:"bytes,2,rep,name=localKvs,proto3" json:"localKvs,omitempty"`
	XXX_NoUnkeyedLiteral struct{}          `json:"-"`
	XXX_unrecognized     []byte            `json:"-"`
	XXX_sizecache        int32             `json:"-"`
}

func (m *ZkReceiptLog) Reset()         { *m = ZkReceiptLog{} }
func (m *ZkReceiptLog) String() string { return proto.CompactTextString(m) }
func (*ZkReceiptLog) ProtoMessage()    {}
func (*ZkReceiptLog) Descriptor() ([]byte, []int) {
	return fileDescriptor_zksync_95b070c4c0abad18, []int{36}
}
func (m *ZkReceiptLog) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_ZkReceiptLog.Unmarshal(m, b)
}
func (m *ZkReceiptLog) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_ZkReceiptLog.Marshal(b, m, deterministic)
}
func (dst *ZkReceiptLog) XXX_Merge(src proto.Message) {
	xxx_messageInfo_ZkReceiptLog.Merge(dst, src)
}
func (m *ZkReceiptLog) XXX_Size() int {
	return xxx_messageInfo_ZkReceiptLog.Size(m)
}
func (m *ZkReceiptLog) XXX_DiscardUnknown() {
	xxx_messageInfo_ZkReceiptLog.DiscardUnknown(m)
}

var xxx_messageInfo_ZkReceiptLog proto.InternalMessageInfo

func (m *ZkReceiptLog) GetOperationInfo() *OperationInfo {
	if m != nil {
		return m.OperationInfo
	}
	return nil
}

func (m *ZkReceiptLog) GetLocalKvs() []*types.KeyValue {
	if m != nil {
		return m.LocalKvs
	}
	return nil
}

type ZkQueryProofReq struct {
	NeedDetail           bool     `protobuf:"varint,1,opt,name=needDetail,proto3" json:"needDetail,omitempty"`
	StartBlockHeight     uint64   `protobuf:"varint,2,opt,name=startBlockHeight,proto3" json:"startBlockHeight,omitempty"`
	EndBlockHeight       uint64   `protobuf:"varint,3,opt,name=endBlockHeight,proto3" json:"endBlockHeight,omitempty"`
	StartIndex           uint64   `protobuf:"varint,4,opt,name=startIndex,proto3" json:"startIndex,omitempty"`
	OpIndex              uint32   `protobuf:"varint,5,opt,name=opIndex,proto3" json:"opIndex,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *ZkQueryProofReq) Reset()         { *m = ZkQueryProofReq{} }
func (m *ZkQueryProofReq) String() string { return proto.CompactTextString(m) }
func (*ZkQueryProofReq) ProtoMessage()    {}
func (*ZkQueryProofReq) Descriptor() ([]byte, []int) {
	return fileDescriptor_zksync_95b070c4c0abad18, []int{37}
}
func (m *ZkQueryProofReq) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_ZkQueryProofReq.Unmarshal(m, b)
}
func (m *ZkQueryProofReq) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_ZkQueryProofReq.Marshal(b, m, deterministic)
}
func (dst *ZkQueryProofReq) XXX_Merge(src proto.Message) {
	xxx_messageInfo_ZkQueryProofReq.Merge(dst, src)
}
func (m *ZkQueryProofReq) XXX_Size() int {
	return xxx_messageInfo_ZkQueryProofReq.Size(m)
}
func (m *ZkQueryProofReq) XXX_DiscardUnknown() {
	xxx_messageInfo_ZkQueryProofReq.DiscardUnknown(m)
}

var xxx_messageInfo_ZkQueryProofReq proto.InternalMessageInfo

func (m *ZkQueryProofReq) GetNeedDetail() bool {
	if m != nil {
		return m.NeedDetail
	}
	return false
}

func (m *ZkQueryProofReq) GetStartBlockHeight() uint64 {
	if m != nil {
		return m.StartBlockHeight
	}
	return 0
}

func (m *ZkQueryProofReq) GetEndBlockHeight() uint64 {
	if m != nil {
		return m.EndBlockHeight
	}
	return 0
}

func (m *ZkQueryProofReq) GetStartIndex() uint64 {
	if m != nil {
		return m.StartIndex
	}
	return 0
}

func (m *ZkQueryProofReq) GetOpIndex() uint32 {
	if m != nil {
		return m.OpIndex
	}
	return 0
}

type ZkQueryProofResp struct {
	OperationInfos       []*OperationInfo `protobuf:"bytes,1,rep,name=operationInfos,proto3" json:"operationInfos,omitempty"`
	XXX_NoUnkeyedLiteral struct{}         `json:"-"`
	XXX_unrecognized     []byte           `json:"-"`
	XXX_sizecache        int32            `json:"-"`
}

func (m *ZkQueryProofResp) Reset()         { *m = ZkQueryProofResp{} }
func (m *ZkQueryProofResp) String() string { return proto.CompactTextString(m) }
func (*ZkQueryProofResp) ProtoMessage()    {}
func (*ZkQueryProofResp) Descriptor() ([]byte, []int) {
	return fileDescriptor_zksync_95b070c4c0abad18, []int{38}
}
func (m *ZkQueryProofResp) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_ZkQueryProofResp.Unmarshal(m, b)
}
func (m *ZkQueryProofResp) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_ZkQueryProofResp.Marshal(b, m, deterministic)
}
func (dst *ZkQueryProofResp) XXX_Merge(src proto.Message) {
	xxx_messageInfo_ZkQueryProofResp.Merge(dst, src)
}
func (m *ZkQueryProofResp) XXX_Size() int {
	return xxx_messageInfo_ZkQueryProofResp.Size(m)
}
func (m *ZkQueryProofResp) XXX_DiscardUnknown() {
	xxx_messageInfo_ZkQueryProofResp.DiscardUnknown(m)
}

var xxx_messageInfo_ZkQueryProofResp proto.InternalMessageInfo

func (m *ZkQueryProofResp) GetOperationInfos() []*OperationInfo {
	if m != nil {
		return m.OperationInfos
	}
	return nil
}

// query committed proof info
type ZkFetchProofList struct {
	ProofId              uint64   `protobuf:"varint,1,opt,name=proofId,proto3" json:"proofId,omitempty"`
	OnChainProofId       uint64   `protobuf:"varint,2,opt,name=onChainProofId,proto3" json:"onChainProofId,omitempty"`
	ReqOnChainProof      bool     `protobuf:"varint,3,opt,name=reqOnChainProof,proto3" json:"reqOnChainProof,omitempty"`
	ReqLatestProof       bool     `protobuf:"varint,4,opt,name=reqLatestProof,proto3" json:"reqLatestProof,omitempty"`
	EndHeight            uint64   `protobuf:"varint,5,opt,name=endHeight,proto3" json:"endHeight,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *ZkFetchProofList) Reset()         { *m = ZkFetchProofList{} }
func (m *ZkFetchProofList) String() string { return proto.CompactTextString(m) }
func (*ZkFetchProofList) ProtoMessage()    {}
func (*ZkFetchProofList) Descriptor() ([]byte, []int) {
	return fileDescriptor_zksync_95b070c4c0abad18, []int{39}
}
func (m *ZkFetchProofList) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_ZkFetchProofList.Unmarshal(m, b)
}
func (m *ZkFetchProofList) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_ZkFetchProofList.Marshal(b, m, deterministic)
}
func (dst *ZkFetchProofList) XXX_Merge(src proto.Message) {
	xxx_messageInfo_ZkFetchProofList.Merge(dst, src)
}
func (m *ZkFetchProofList) XXX_Size() int {
	return xxx_messageInfo_ZkFetchProofList.Size(m)
}
func (m *ZkFetchProofList) XXX_DiscardUnknown() {
	xxx_messageInfo_ZkFetchProofList.DiscardUnknown(m)
}

var xxx_messageInfo_ZkFetchProofList proto.InternalMessageInfo

func (m *ZkFetchProofList) GetProofId() uint64 {
	if m != nil {
		return m.ProofId
	}
	return 0
}

func (m *ZkFetchProofList) GetOnChainProofId() uint64 {
	if m != nil {
		return m.OnChainProofId
	}
	return 0
}

func (m *ZkFetchProofList) GetReqOnChainProof() bool {
	if m != nil {
		return m.ReqOnChainProof
	}
	return false
}

func (m *ZkFetchProofList) GetReqLatestProof() bool {
	if m != nil {
		return m.ReqLatestProof
	}
	return false
}

func (m *ZkFetchProofList) GetEndHeight() uint64 {
	if m != nil {
		return m.EndHeight
	}
	return 0
}

type ZkOperation struct {
	AccountId            uint64    `protobuf:"varint,1,opt,name=accountId,proto3" json:"accountId,omitempty"`
	TokenId              uint64    `protobuf:"varint,2,opt,name=tokenId,proto3" json:"tokenId,omitempty"`
	Amount               string    `protobuf:"bytes,3,opt,name=amount,proto3" json:"amount,omitempty"`
	EthAddress           string    `protobuf:"bytes,5,opt,name=ethAddress,proto3" json:"ethAddress,omitempty"`
	PubKey               *ZkPubKey `protobuf:"bytes,6,opt,name=pubKey,proto3" json:"pubKey,omitempty"`
	Chain33Addr          string    `protobuf:"bytes,7,opt,name=chain33Addr,proto3" json:"chain33Addr,omitempty"`
	ToAccountId          uint64    `protobuf:"varint,4,opt,name=toAccountId,proto3" json:"toAccountId,omitempty"`
	Ty                   int32     `protobuf:"varint,8,opt,name=ty,proto3" json:"ty,omitempty"`
	XXX_NoUnkeyedLiteral struct{}  `json:"-"`
	XXX_unrecognized     []byte    `json:"-"`
	XXX_sizecache        int32     `json:"-"`
}

func (m *ZkOperation) Reset()         { *m = ZkOperation{} }
func (m *ZkOperation) String() string { return proto.CompactTextString(m) }
func (*ZkOperation) ProtoMessage()    {}
func (*ZkOperation) Descriptor() ([]byte, []int) {
	return fileDescriptor_zksync_95b070c4c0abad18, []int{40}
}
func (m *ZkOperation) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_ZkOperation.Unmarshal(m, b)
}
func (m *ZkOperation) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_ZkOperation.Marshal(b, m, deterministic)
}
func (dst *ZkOperation) XXX_Merge(src proto.Message) {
	xxx_messageInfo_ZkOperation.Merge(dst, src)
}
func (m *ZkOperation) XXX_Size() int {
	return xxx_messageInfo_ZkOperation.Size(m)
}
func (m *ZkOperation) XXX_DiscardUnknown() {
	xxx_messageInfo_ZkOperation.DiscardUnknown(m)
}

var xxx_messageInfo_ZkOperation proto.InternalMessageInfo

func (m *ZkOperation) GetAccountId() uint64 {
	if m != nil {
		return m.AccountId
	}
	return 0
}

func (m *ZkOperation) GetTokenId() uint64 {
	if m != nil {
		return m.TokenId
	}
	return 0
}

func (m *ZkOperation) GetAmount() string {
	if m != nil {
		return m.Amount
	}
	return ""
}

func (m *ZkOperation) GetEthAddress() string {
	if m != nil {
		return m.EthAddress
	}
	return ""
}

func (m *ZkOperation) GetPubKey() *ZkPubKey {
	if m != nil {
		return m.PubKey
	}
	return nil
}

func (m *ZkOperation) GetChain33Addr() string {
	if m != nil {
		return m.Chain33Addr
	}
	return ""
}

func (m *ZkOperation) GetToAccountId() uint64 {
	if m != nil {
		return m.ToAccountId
	}
	return 0
}

func (m *ZkOperation) GetTy() int32 {
	if m != nil {
		return m.Ty
	}
	return 0
}

type EthPriorityQueueID struct {
	ID                   string   `protobuf:"bytes,1,opt,name=ID,proto3" json:"ID,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *EthPriorityQueueID) Reset()         { *m = EthPriorityQueueID{} }
func (m *EthPriorityQueueID) String() string { return proto.CompactTextString(m) }
func (*EthPriorityQueueID) ProtoMessage()    {}
func (*EthPriorityQueueID) Descriptor() ([]byte, []int) {
	return fileDescriptor_zksync_95b070c4c0abad18, []int{41}
}
func (m *EthPriorityQueueID) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_EthPriorityQueueID.Unmarshal(m, b)
}
func (m *EthPriorityQueueID) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_EthPriorityQueueID.Marshal(b, m, deterministic)
}
func (dst *EthPriorityQueueID) XXX_Merge(src proto.Message) {
	xxx_messageInfo_EthPriorityQueueID.Merge(dst, src)
}
func (m *EthPriorityQueueID) XXX_Size() int {
	return xxx_messageInfo_EthPriorityQueueID.Size(m)
}
func (m *EthPriorityQueueID) XXX_DiscardUnknown() {
	xxx_messageInfo_EthPriorityQueueID.DiscardUnknown(m)
}

var xxx_messageInfo_EthPriorityQueueID proto.InternalMessageInfo

func (m *EthPriorityQueueID) GetID() string {
	if m != nil {
		return m.ID
	}
	return ""
}

type ReceiptEthPriorityQueueID struct {
	Prev                 int64    `protobuf:"varint,1,opt,name=prev,proto3" json:"prev,omitempty"`
	Current              int64    `protobuf:"varint,2,opt,name=current,proto3" json:"current,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *ReceiptEthPriorityQueueID) Reset()         { *m = ReceiptEthPriorityQueueID{} }
func (m *ReceiptEthPriorityQueueID) String() string { return proto.CompactTextString(m) }
func (*ReceiptEthPriorityQueueID) ProtoMessage()    {}
func (*ReceiptEthPriorityQueueID) Descriptor() ([]byte, []int) {
	return fileDescriptor_zksync_95b070c4c0abad18, []int{42}
}
func (m *ReceiptEthPriorityQueueID) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_ReceiptEthPriorityQueueID.Unmarshal(m, b)
}
func (m *ReceiptEthPriorityQueueID) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_ReceiptEthPriorityQueueID.Marshal(b, m, deterministic)
}
func (dst *ReceiptEthPriorityQueueID) XXX_Merge(src proto.Message) {
	xxx_messageInfo_ReceiptEthPriorityQueueID.Merge(dst, src)
}
func (m *ReceiptEthPriorityQueueID) XXX_Size() int {
	return xxx_messageInfo_ReceiptEthPriorityQueueID.Size(m)
}
func (m *ReceiptEthPriorityQueueID) XXX_DiscardUnknown() {
	xxx_messageInfo_ReceiptEthPriorityQueueID.DiscardUnknown(m)
}

var xxx_messageInfo_ReceiptEthPriorityQueueID proto.InternalMessageInfo

func (m *ReceiptEthPriorityQueueID) GetPrev() int64 {
	if m != nil {
		return m.Prev
	}
	return 0
}

func (m *ReceiptEthPriorityQueueID) GetCurrent() int64 {
	if m != nil {
		return m.Current
	}
	return 0
}

func init() {
	proto.RegisterType((*ZksyncAction)(nil), "types.ZksyncAction")
	proto.RegisterType((*TokenBalance)(nil), "types.TokenBalance")
	proto.RegisterType((*AccountTree)(nil), "types.AccountTree")
	proto.RegisterType((*Leaf)(nil), "types.Leaf")
	proto.RegisterType((*HistoryLeaf)(nil), "types.HistoryLeaf")
	proto.RegisterType((*RootInfo)(nil), "types.RootInfo")
	proto.RegisterType((*SubTree)(nil), "types.SubTree")
	proto.RegisterType((*MerkleTreeProof)(nil), "types.MerkleTreeProof")
	proto.RegisterType((*ZkDeposit)(nil), "types.ZkDeposit")
	proto.RegisterType((*ZkWithdraw)(nil), "types.ZkWithdraw")
	proto.RegisterType((*ZkContractToTree)(nil), "types.ZkContractToTree")
	proto.RegisterType((*ZkTreeToContract)(nil), "types.ZkTreeToContract")
	proto.RegisterType((*ZkTransfer)(nil), "types.ZkTransfer")
	proto.RegisterType((*ZkTransferToNew)(nil), "types.ZkTransferToNew")
	proto.RegisterType((*ZkForceExit)(nil), "types.ZkForceExit")
	proto.RegisterType((*ZkSetPubKey)(nil), "types.ZkSetPubKey")
	proto.RegisterType((*ZkFullExit)(nil), "types.ZkFullExit")
	proto.RegisterType((*ZkSwap)(nil), "types.ZkSwap")
	proto.RegisterType((*ZkMintNFT)(nil), "types.ZkMintNFT")
	proto.RegisterType((*ZkWithdrawNFT)(nil), "types.ZkWithdrawNFT")
	proto.RegisterType((*ZkTransferNFT)(nil), "types.ZkTransferNFT")
	proto.RegisterType((*ZkNFTTokenStatus)(nil), "types.ZkNFTTokenStatus")
	proto.RegisterType((*ZkVerifyKey)(nil), "types.ZkVerifyKey")
	proto.RegisterType((*ReceiptSetVerifyKey)(nil), "types.ReceiptSetVerifyKey")
	proto.RegisterType((*ZkCommitProof)(nil), "types.ZkCommitProof")
	proto.RegisterType((*CommitProofState)(nil), "types.CommitProofState")
	proto.RegisterType((*LastOnChainProof)(nil), "types.LastOnChainProof")
	proto.RegisterType((*ReceiptCommitProof)(nil), "types.ReceiptCommitProof")
	proto.RegisterType((*ZkVerifier)(nil), "types.ZkVerifier")
	proto.RegisterType((*ReceiptSetVerifier)(nil), "types.ReceiptSetVerifier")
	proto.RegisterType((*ZkSetFee)(nil), "types.ZkSetFee")
	proto.RegisterType((*ReceiptSetFee)(nil), "types.ReceiptSetFee")
	proto.RegisterType((*RelayerOperators)(nil), "types.RelayerOperators")
	proto.RegisterType((*ZkReceiptLeaf)(nil), "types.ZkReceiptLeaf")
	proto.RegisterType((*ZkQueryReq)(nil), "types.ZkQueryReq")
	proto.RegisterType((*ZkQueryResp)(nil), "types.ZkQueryResp")
	proto.RegisterType((*ZkReceiptLog)(nil), "types.ZkReceiptLog")
	proto.RegisterType((*ZkQueryProofReq)(nil), "types.ZkQueryProofReq")
	proto.RegisterType((*ZkQueryProofResp)(nil), "types.ZkQueryProofResp")
	proto.RegisterType((*ZkFetchProofList)(nil), "types.ZkFetchProofList")
	proto.RegisterType((*ZkOperation)(nil), "types.ZkOperation")
	proto.RegisterType((*EthPriorityQueueID)(nil), "types.EthPriorityQueueID")
	proto.RegisterType((*ReceiptEthPriorityQueueID)(nil), "types.ReceiptEthPriorityQueueID")
}

// Reference imports to suppress errors if they are not otherwise used.
var _ context.Context
var _ grpc.ClientConn

// This is a compile-time assertion to ensure that this generated file
// is compatible with the grpc package it is being compiled against.
const _ = grpc.SupportPackageIsVersion4

// ZksyncClient is the client API for Zksync service.
//
// For semantics around ctx use and closing/ending streaming RPCs, please refer to https://godoc.org/google.golang.org/grpc#ClientConn.NewStream.
type ZksyncClient interface {
}

type zksyncClient struct {
	cc *grpc.ClientConn
}

func NewZksyncClient(cc *grpc.ClientConn) ZksyncClient {
	return &zksyncClient{cc}
}

// ZksyncServer is the server API for Zksync service.
type ZksyncServer interface {
}

func RegisterZksyncServer(s *grpc.Server, srv ZksyncServer) {
	s.RegisterService(&_Zksync_serviceDesc, srv)
}

var _Zksync_serviceDesc = grpc.ServiceDesc{
	ServiceName: "types.zksync",
	HandlerType: (*ZksyncServer)(nil),
	Methods:     []grpc.MethodDesc{},
	Streams:     []grpc.StreamDesc{},
	Metadata:    "zksync.proto",
}

func init() { proto.RegisterFile("zksync.proto", fileDescriptor_zksync_95b070c4c0abad18) }

var fileDescriptor_zksync_95b070c4c0abad18 = []byte{
	// 2249 bytes of a gzipped FileDescriptorProto
	0x1f, 0x8b, 0x08, 0x00, 0x00, 0x00, 0x00, 0x00, 0x02, 0xff, 0xec, 0x59, 0x4f, 0x6f, 0x23, 0x49,
	0x15, 0x8f, 0xdd, 0xb6, 0x63, 0x3f, 0xdb, 0x49, 0xa6, 0x76, 0x35, 0x34, 0xd1, 0x6a, 0x36, 0xea,
	0x5d, 0x86, 0xec, 0xcc, 0x2a, 0xd9, 0x4d, 0x00, 0x2d, 0x2b, 0x58, 0x29, 0x99, 0x4c, 0xe4, 0x68,
	0x66, 0x67, 0xb2, 0x15, 0x6b, 0x07, 0xcd, 0x01, 0xa9, 0xdd, 0x2e, 0xc7, 0xad, 0x74, 0xba, 0x7a,
	0xba, 0xcb, 0x49, 0xcc, 0x57, 0x40, 0x42, 0x1c, 0xb8, 0xc0, 0x85, 0x1b, 0x17, 0x8e, 0x5c, 0x90,
	0x38, 0x00, 0xd2, 0x72, 0xe0, 0xcc, 0x27, 0xe0, 0xcc, 0x37, 0xe0, 0x84, 0x5e, 0x55, 0x75, 0x77,
	0x75, 0x3b, 0x71, 0x32, 0x19, 0x40, 0x7b, 0xd8, 0x53, 0x52, 0xef, 0xfd, 0x5e, 0xf5, 0xab, 0x57,
	0xef, 0x4f, 0xbd, 0x67, 0xe8, 0xfc, 0xec, 0x24, 0x99, 0x86, 0xde, 0x46, 0x14, 0x73, 0xc1, 0x49,
	0x5d, 0x4c, 0x23, 0x96, 0xac, 0x76, 0xcf, 0x7d, 0x11, 0xb2, 0x24, 0x51, 0xd4, 0xd5, 0x8e, 0xc7,
	0x4f, 0x4f, 0x79, 0xa8, 0x56, 0xce, 0x1f, 0x16, 0xa1, 0xf3, 0x52, 0x0a, 0xed, 0x78, 0xc2, 0xe7,
	0x21, 0xf9, 0x10, 0x16, 0x87, 0x2c, 0xe2, 0x89, 0x2f, 0xec, 0xca, 0x5a, 0x65, 0xbd, 0xbd, 0xb5,
	0xb2, 0x21, 0xb7, 0xd9, 0x78, 0x79, 0xb2, 0xa7, 0xe8, 0xbd, 0x05, 0x9a, 0x42, 0xc8, 0x26, 0x34,
	0xcf, 0x7d, 0x31, 0x1e, 0xc6, 0xee, 0xb9, 0x5d, 0x95, 0xf0, 0x3b, 0x19, 0xfc, 0x85, 0x66, 0xf4,
	0x16, 0x68, 0x06, 0x22, 0x3b, 0xb0, 0xe4, 0xf1, 0x50, 0xc4, 0xae, 0x27, 0xfa, 0xbc, 0x1f, 0x33,
	0x66, 0x5b, 0x52, 0xec, 0x5b, 0x99, 0xd8, 0xa3, 0x02, 0xbb, 0xb7, 0x40, 0x4b, 0x02, 0xb8, 0x85,
	0x88, 0x19, 0xeb, 0xf3, 0x14, 0x69, 0xd7, 0x4a, 0x5b, 0xf4, 0x0b, 0x6c, 0xdc, 0xa2, 0x28, 0x80,
	0x6a, 0x8b, 0xd8, 0x0d, 0x93, 0x11, 0x8b, 0xed, 0x7a, 0x49, 0xed, 0xbe, 0x66, 0xa0, 0xda, 0x29,
	0x88, 0x7c, 0x06, 0xdd, 0xf4, 0xff, 0x3e, 0x7f, 0xc6, 0xce, 0xed, 0x86, 0x94, 0xba, 0x3b, 0x23,
	0x25, 0xb9, 0xbd, 0x05, 0x5a, 0x84, 0x93, 0x2d, 0x68, 0x8d, 0x78, 0xec, 0xb1, 0xc7, 0x17, 0xbe,
	0xb0, 0x17, 0xa5, 0x2c, 0xc9, 0x64, 0xf7, 0x53, 0x4e, 0x6f, 0x81, 0xe6, 0x30, 0x94, 0x49, 0x98,
	0x38, 0x9c, 0x0c, 0x9e, 0xb0, 0xa9, 0xdd, 0x2c, 0xc9, 0x1c, 0xa5, 0x1c, 0x94, 0xc9, 0x60, 0x78,
	0xb0, 0xd1, 0x24, 0x08, 0xe4, 0x67, 0x5a, 0xa5, 0x83, 0xed, 0x6b, 0x06, 0x1e, 0x2c, 0x05, 0x91,
	0xf7, 0xa0, 0x96, 0x9c, 0xbb, 0x91, 0x0d, 0x12, 0xdc, 0xcd, 0xf7, 0x3f, 0x77, 0xa3, 0xde, 0x02,
	0x95, 0x4c, 0xf2, 0x09, 0x74, 0x12, 0x26, 0xbe, 0x64, 0xb1, 0x3f, 0x9a, 0xa2, 0x32, 0xed, 0x92,
	0x32, 0x19, 0xa7, 0xb7, 0x40, 0x0b, 0x48, 0xf2, 0x09, 0xb4, 0xd1, 0xdd, 0x7c, 0x71, 0x18, 0x73,
	0x3e, 0xb2, 0x3b, 0x52, 0xf0, 0x6d, 0xe3, 0xae, 0x33, 0x5e, 0x6f, 0x81, 0x9a, 0x50, 0xf2, 0x7d,
	0x68, 0xa7, 0x3b, 0xf9, 0x2c, 0xb6, 0xbb, 0xa5, 0xc3, 0xa4, 0x0c, 0x14, 0x33, 0x70, 0xe4, 0x03,
	0x68, 0x24, 0x4c, 0xec, 0x33, 0x66, 0x2f, 0x49, 0x89, 0x65, 0xd3, 0x62, 0xfb, 0xd2, 0x9f, 0x34,
	0x00, 0x3d, 0xfd, 0xd4, 0x0f, 0xc5, 0xb3, 0xfd, 0xbe, 0xbd, 0x52, 0xf2, 0xf4, 0xcf, 0x15, 0x1d,
	0x3d, 0x5d, 0x43, 0xf0, 0x24, 0xa9, 0x13, 0xa3, 0xc4, 0x9d, 0xd2, 0x49, 0x5e, 0xe4, 0x3c, 0x54,
	0xc9, 0x80, 0xa2, 0x64, 0xea, 0x0c, 0x28, 0x49, 0x4a, 0x92, 0xfd, 0x9c, 0x87, 0x92, 0x06, 0x94,
	0x2c, 0x41, 0x55, 0x4c, 0xed, 0xe5, 0xb5, 0xca, 0x7a, 0x9d, 0x56, 0xc5, 0x74, 0x77, 0x11, 0xea,
	0x67, 0x6e, 0x30, 0x61, 0xce, 0x2e, 0x74, 0xfa, 0xfc, 0x84, 0x85, 0xbb, 0x6e, 0xe0, 0x86, 0x1e,
	0x23, 0x36, 0x2c, 0x0a, 0x5c, 0x1f, 0x0c, 0x65, 0xd0, 0xd6, 0x68, 0xba, 0x44, 0xce, 0x40, 0x81,
	0x64, 0x7c, 0xb6, 0x68, 0xba, 0x74, 0x7e, 0x5d, 0x81, 0xf6, 0x8e, 0xe7, 0xf1, 0x49, 0x28, 0x64,
	0x58, 0xbd, 0x0d, 0x75, 0x3f, 0x1c, 0xb2, 0x0b, 0xbd, 0x83, 0x5a, 0x90, 0x7b, 0x00, 0x82, 0x0b,
	0x37, 0x38, 0x90, 0xac, 0xaa, 0x64, 0x19, 0x14, 0xb2, 0x0e, 0xcb, 0xa7, 0xee, 0xc5, 0xa3, 0x49,
	0x1c, 0xb3, 0x50, 0x28, 0x90, 0x25, 0x41, 0x65, 0x32, 0x79, 0x00, 0xcd, 0x64, 0x32, 0xc0, 0x4f,
	0x25, 0x76, 0x6d, 0xcd, 0x5a, 0x6f, 0x6f, 0x2d, 0x69, 0x1b, 0x1c, 0x29, 0x32, 0xcd, 0xf8, 0xce,
	0xdf, 0xaa, 0x50, 0x7b, 0xca, 0xdc, 0x11, 0x79, 0x07, 0x5a, 0xae, 0xd2, 0x31, 0x3b, 0x5a, 0x4e,
	0x40, 0xe5, 0x98, 0x18, 0xef, 0x0c, 0x87, 0x31, 0x4b, 0x12, 0x7d, 0x3e, 0x83, 0x42, 0xbe, 0x0b,
	0x8d, 0x48, 0x85, 0x8f, 0x55, 0x72, 0x06, 0x15, 0x2e, 0x54, 0xb3, 0xc9, 0x5d, 0x68, 0x04, 0x5b,
	0x28, 0x25, 0x53, 0x49, 0x8b, 0xea, 0x15, 0x7e, 0x5e, 0x1a, 0xb2, 0xe7, 0x26, 0x63, 0x99, 0x28,
	0x5a, 0x34, 0x27, 0x90, 0x55, 0x68, 0x6a, 0x33, 0x27, 0x76, 0x63, 0xcd, 0x5a, 0xaf, 0xd1, 0x6c,
	0x4d, 0x3e, 0x83, 0x4e, 0x14, 0xf3, 0x8b, 0xa9, 0xfa, 0x50, 0xa2, 0x63, 0x7e, 0x55, 0x2b, 0xa0,
	0xed, 0x7e, 0x68, 0x20, 0x68, 0x01, 0x8f, 0x5f, 0xf6, 0xc6, 0xae, 0x1f, 0x4a, 0xa5, 0x9a, 0xea,
	0xcb, 0x19, 0x81, 0xdc, 0x87, 0x25, 0x89, 0x7e, 0x94, 0x41, 0x5a, 0x12, 0x52, 0xa2, 0x3a, 0x7f,
	0xaa, 0x42, 0xbb, 0xe7, 0x27, 0x82, 0xc7, 0xd3, 0xff, 0xa7, 0x39, 0xd7, 0xa0, 0x2d, 0x75, 0xdd,
	0xde, 0x36, 0x6c, 0x6a, 0x92, 0xae, 0x31, 0xec, 0x43, 0x68, 0xc8, 0x85, 0x32, 0x6b, 0x7b, 0xeb,
	0x2d, 0xfd, 0x21, 0xd3, 0xe7, 0xa9, 0x86, 0xa0, 0x87, 0x47, 0x98, 0x31, 0x0e, 0x86, 0xd2, 0xc8,
	0x35, 0x9a, 0x2e, 0x67, 0xee, 0xa0, 0xf9, 0x7a, 0x77, 0xe0, 0xfc, 0x14, 0x9a, 0x94, 0x73, 0x71,
	0x10, 0x8e, 0x38, 0xde, 0x75, 0xcc, 0xb9, 0x90, 0xfa, 0x56, 0xa4, 0xbe, 0xd9, 0x1a, 0xbd, 0x67,
	0xcc, 0xfc, 0xe3, 0xb1, 0x90, 0x36, 0xab, 0x53, 0xbd, 0x42, 0x7b, 0x26, 0xc2, 0x8d, 0x0b, 0x61,
	0x61, 0x50, 0x9c, 0x1f, 0xc3, 0xa2, 0x76, 0x7d, 0x63, 0x8b, 0x4a, 0x61, 0x0b, 0xf3, 0xb3, 0xb8,
	0x79, 0x27, 0xff, 0xac, 0xe3, 0xc1, 0xf2, 0xe7, 0x2c, 0x3e, 0x09, 0x18, 0xee, 0xa0, 0x92, 0xe6,
	0x3c, 0x2d, 0x57, 0xa1, 0x29, 0x0d, 0x73, 0xc4, 0x50, 0x4f, 0x0b, 0x79, 0xe9, 0x1a, 0x6d, 0x38,
	0x66, 0x41, 0xc4, 0xe2, 0xc4, 0xb6, 0x24, 0x2b, 0x5d, 0x3a, 0xff, 0xac, 0x40, 0x2b, 0xab, 0xfc,
	0x73, 0xf2, 0xcc, 0x5d, 0x68, 0xb8, 0xa7, 0x68, 0x4f, 0xed, 0x37, 0x7a, 0x55, 0xf2, 0x29, 0x6b,
	0xc6, 0xa7, 0xae, 0x77, 0x95, 0x0d, 0x20, 0x4c, 0x8c, 0x0f, 0x63, 0x9f, 0xc7, 0xbe, 0x98, 0x7e,
	0x31, 0x61, 0x13, 0x76, 0x30, 0x94, 0x3e, 0x63, 0xd1, 0x4b, 0x38, 0xe4, 0x23, 0x68, 0x25, 0xfe,
	0x71, 0xe8, 0x8a, 0x49, 0xcc, 0x74, 0x99, 0x36, 0xca, 0x66, 0xca, 0xa1, 0x39, 0xc8, 0xf9, 0x45,
	0x05, 0x20, 0xcf, 0xe0, 0xb7, 0x38, 0x64, 0x21, 0xac, 0xac, 0x72, 0x58, 0x15, 0x14, 0xaa, 0xdd,
	0x44, 0xa1, 0x5f, 0x55, 0x60, 0xa5, 0xfc, 0x10, 0xfa, 0xda, 0xa8, 0x55, 0x7c, 0x5c, 0x7d, 0x0d,
	0xd4, 0xfa, 0xa3, 0xbc, 0xbe, 0xb4, 0x8c, 0xde, 0x42, 0xa1, 0xf7, 0xa1, 0x3b, 0x8a, 0xf9, 0xe9,
	0x4e, 0x49, 0xa9, 0x22, 0x11, 0x3d, 0x55, 0xf0, 0x1c, 0x53, 0x93, 0x18, 0x93, 0x54, 0x54, 0xbd,
	0x7e, 0x13, 0xd5, 0xff, 0x55, 0x81, 0xe5, 0xd2, 0xdb, 0xf1, 0x7f, 0xa6, 0xbf, 0x03, 0x1d, 0xc1,
	0x1f, 0xe7, 0xb1, 0xa8, 0x42, 0xad, 0x40, 0x23, 0x0f, 0x60, 0x45, 0xf0, 0x47, 0x79, 0xf0, 0x21,
	0x4e, 0x65, 0xe7, 0x19, 0xfa, 0x2d, 0xe2, 0xec, 0x1c, 0xda, 0xc6, 0x63, 0x77, 0xce, 0x41, 0x0b,
	0x1e, 0x52, 0x9d, 0xeb, 0x21, 0xd6, 0x4d, 0x3e, 0xfc, 0x97, 0x0a, 0x7e, 0x39, 0x7b, 0x32, 0x5f,
	0x53, 0x06, 0xf3, 0x32, 0x57, 0x9d, 0x5f, 0xe6, 0x30, 0xa3, 0xca, 0xff, 0xfa, 0x53, 0x6d, 0xf2,
	0x6c, 0xfd, 0xfa, 0x6e, 0x5c, 0xac, 0xf8, 0xf5, 0x52, 0xc5, 0x77, 0x7e, 0x27, 0x9d, 0x3c, 0x7d,
	0xc2, 0xdf, 0xda, 0x76, 0x97, 0x27, 0x53, 0xeb, 0x66, 0xc9, 0xf4, 0x46, 0xd1, 0xf8, 0x29, 0x34,
	0x54, 0xf7, 0x50, 0x94, 0xad, 0xdc, 0x44, 0x56, 0x15, 0x1b, 0xfd, 0xf8, 0x9e, 0x75, 0xeb, 0xca,
	0x15, 0x61, 0x19, 0x33, 0xcf, 0x8f, 0x7c, 0x66, 0x9c, 0xd8, 0x24, 0xc9, 0x12, 0xc3, 0x43, 0xc1,
	0x42, 0x55, 0x17, 0x2d, 0x5d, 0x62, 0x72, 0x12, 0x22, 0x58, 0xec, 0x1d, 0x62, 0x43, 0xec, 0xf1,
	0x20, 0x0d, 0x6d, 0x83, 0x64, 0x84, 0x5e, 0x5d, 0x32, 0xd3, 0xd0, 0x7b, 0xfd, 0x20, 0xf8, 0x6d,
	0x05, 0xba, 0x85, 0x76, 0xe1, 0x86, 0xe7, 0xbc, 0x07, 0xf0, 0x6c, 0xbf, 0xdf, 0xd7, 0x97, 0xae,
	0x1f, 0xe2, 0x39, 0xc5, 0xd0, 0xd0, 0xba, 0x5a, 0xc3, 0x1b, 0x25, 0xa5, 0xbf, 0x4a, 0x0d, 0x8d,
	0xb6, 0xe4, 0xbf, 0x76, 0x13, 0xc5, 0x33, 0x58, 0x73, 0xce, 0x50, 0x7b, 0x43, 0x2b, 0xff, 0xa6,
	0x8a, 0xa5, 0x2a, 0xdd, 0xfa, 0x48, 0xb8, 0x62, 0x92, 0x60, 0x3b, 0x95, 0xe9, 0x5e, 0x55, 0xa1,
	0xe2, 0xc5, 0xcc, 0x15, 0x3c, 0xce, 0x43, 0x25, 0x23, 0xe0, 0x1b, 0x5b, 0x2f, 0x74, 0x82, 0xd4,
	0x9e, 0x53, 0xa2, 0x62, 0x07, 0xa4, 0x29, 0x47, 0x2c, 0xf6, 0xdd, 0x20, 0xab, 0x0d, 0x65, 0x72,
	0xd9, 0xcd, 0xea, 0xb3, 0x6e, 0x76, 0x0f, 0x00, 0xfb, 0xcd, 0x1d, 0x65, 0x84, 0x86, 0x32, 0x50,
	0x4e, 0x29, 0xbb, 0xf2, 0xe2, 0xac, 0x2b, 0x3b, 0xd0, 0x19, 0x4c, 0xe2, 0x90, 0x0d, 0xf5, 0x1e,
	0x4d, 0xb9, 0x47, 0x81, 0xe6, 0xbc, 0x8b, 0xd9, 0x30, 0xef, 0xd1, 0x57, 0xc0, 0x3a, 0x61, 0x53,
	0xfd, 0x5e, 0xc4, 0x7f, 0x9d, 0x13, 0x78, 0x8b, 0x32, 0x8f, 0xf9, 0x91, 0x38, 0x32, 0x9b, 0xf9,
	0xfb, 0x50, 0x8b, 0x62, 0x76, 0x36, 0x13, 0xcb, 0x19, 0x82, 0x4a, 0x3e, 0x36, 0xd6, 0x9e, 0xea,
	0xfc, 0x74, 0x06, 0xbd, 0x0c, 0x9a, 0x42, 0x9c, 0x7f, 0x58, 0xe8, 0x6e, 0xc6, 0x24, 0x00, 0xad,
	0x30, 0x08, 0xb8, 0x77, 0x72, 0x84, 0x4f, 0x65, 0x7d, 0x5f, 0x06, 0x05, 0xf9, 0xb2, 0x39, 0x55,
	0x7c, 0x1d, 0x0a, 0x39, 0x05, 0xf3, 0xb2, 0x44, 0x3f, 0x0e, 0x53, 0x27, 0xcb, 0xd6, 0xc8, 0x93,
	0x48, 0xe4, 0xa9, 0x6b, 0xca, 0xd6, 0x98, 0x54, 0x79, 0xa4, 0x1e, 0xeb, 0x78, 0x37, 0x5d, 0x9a,
	0x2e, 0xd1, 0xee, 0x3c, 0x18, 0xca, 0x26, 0x95, 0x73, 0x75, 0x31, 0x2d, 0x6a, 0x92, 0x10, 0x11,
	0xb2, 0xf3, 0x0c, 0xa1, 0x6f, 0xc6, 0x20, 0x21, 0x22, 0x9a, 0x0c, 0x02, 0xdf, 0x3b, 0x08, 0xa3,
	0x89, 0xd0, 0x3d, 0x9d, 0x49, 0xc2, 0x0e, 0x5c, 0xbe, 0xc8, 0x75, 0x33, 0xa7, 0x16, 0xba, 0xca,
	0xec, 0xb9, 0xc2, 0x4d, 0x6c, 0xd0, 0xef, 0x76, 0xbd, 0x46, 0xdf, 0xe3, 0xa1, 0xac, 0xcb, 0x87,
	0x29, 0xa4, 0x2d, 0x21, 0x65, 0xb2, 0xd9, 0x25, 0x75, 0x8a, 0x5d, 0xd2, 0x7d, 0x58, 0x4a, 0xc1,
	0x1a, 0xd0, 0x95, 0x80, 0x12, 0x95, 0x7c, 0x08, 0x77, 0xd4, 0x7c, 0x66, 0x17, 0x6d, 0xd9, 0x53,
	0xdd, 0xca, 0x92, 0xac, 0x1c, 0xb3, 0x0c, 0xe7, 0x97, 0x16, 0xac, 0x18, 0x77, 0x8a, 0x11, 0xc8,
	0xbe, 0xb9, 0xd8, 0xc2, 0xc5, 0x1a, 0x57, 0x02, 0xd7, 0x5d, 0x49, 0xfb, 0xe6, 0x57, 0xd2, 0xb9,
	0xea, 0x4a, 0xfa, 0xb0, 0xf2, 0xd4, 0x4d, 0xc4, 0x73, 0x63, 0x0f, 0x53, 0x87, 0xca, 0x75, 0x3a,
	0x54, 0x2f, 0xd3, 0xc1, 0x11, 0x40, 0x74, 0xae, 0x30, 0x43, 0xf8, 0x61, 0x21, 0x55, 0xa4, 0x93,
	0xd9, 0xb2, 0x43, 0xe8, 0x7c, 0xf1, 0x71, 0x39, 0x5f, 0x5c, 0x89, 0xcf, 0x92, 0xc6, 0x03, 0x7c,
	0x0d, 0x65, 0x43, 0xbf, 0x77, 0xa0, 0x75, 0xa6, 0xff, 0x4f, 0xec, 0x8a, 0x0c, 0x80, 0x9c, 0xe0,
	0x8c, 0x33, 0x0d, 0x8f, 0x8c, 0x41, 0xe1, 0x77, 0x0a, 0x1a, 0xce, 0x0e, 0x16, 0xb5, 0x6e, 0x0f,
	0xcb, 0xba, 0x5d, 0x82, 0xcc, 0xb4, 0xfa, 0x09, 0x34, 0xd3, 0x39, 0xe3, 0x2d, 0x9e, 0xf1, 0xab,
	0xd0, 0x74, 0xe5, 0x0c, 0x5e, 0x3f, 0x27, 0xeb, 0x34, 0x5b, 0x3b, 0x3f, 0xaf, 0x40, 0x37, 0x3f,
	0xc4, 0xfc, 0xfd, 0xcd, 0x7d, 0xaa, 0xc5, 0x7d, 0x30, 0xc2, 0xf0, 0x58, 0x3b, 0xf9, 0x4b, 0xa1,
	0x45, 0x0d, 0x0a, 0x56, 0x7a, 0x7d, 0x98, 0x9d, 0xbc, 0x10, 0xb7, 0x68, 0x91, 0xe8, 0x7c, 0x04,
	0x2b, 0x94, 0x05, 0xee, 0x94, 0xc5, 0xcf, 0x23, 0x16, 0x63, 0x8d, 0x93, 0x03, 0x2b, 0x9e, 0x2e,
	0xd2, 0x3b, 0xc8, 0x08, 0xce, 0xdf, 0xe5, 0x9b, 0x42, 0x9f, 0x40, 0x8e, 0xa2, 0xde, 0x85, 0x5a,
	0xc0, 0xdc, 0x91, 0xb6, 0x7f, 0x5b, 0x5b, 0x15, 0x59, 0x54, 0x32, 0xc8, 0x07, 0x50, 0x97, 0x27,
	0xd2, 0x76, 0xbf, 0x74, 0x06, 0xa4, 0x10, 0xe4, 0x7b, 0xd0, 0x12, 0xe9, 0x0c, 0x44, 0x77, 0x04,
	0xe9, 0x64, 0xbe, 0x34, 0x21, 0xa1, 0x39, 0x90, 0xfc, 0x00, 0x40, 0x8a, 0x2b, 0xb1, 0xda, 0x5c,
	0x31, 0x03, 0xe9, 0x7c, 0x55, 0x45, 0xe7, 0xfb, 0x62, 0xc2, 0xe2, 0x29, 0x65, 0xaf, 0xae, 0x69,
	0x26, 0xd6, 0xa0, 0x3d, 0x30, 0x82, 0x53, 0x3f, 0x8a, 0x0c, 0x92, 0xbc, 0xc8, 0x8b, 0x7c, 0x44,
	0xd4, 0xa5, 0xe9, 0xb2, 0x34, 0x3b, 0xa9, 0x5d, 0x37, 0x3b, 0xa9, 0xcf, 0xce, 0x4e, 0x64, 0xcf,
	0x8a, 0x0f, 0xa0, 0xe9, 0xe9, 0x80, 0x07, 0x69, 0x7a, 0x33, 0x48, 0x32, 0x85, 0x28, 0x81, 0x17,
	0x6e, 0x10, 0x30, 0x21, 0x77, 0x52, 0x49, 0x6e, 0x96, 0x61, 0x3a, 0x5d, 0x73, 0xc6, 0xa9, 0xc5,
	0x85, 0x7c, 0x94, 0xa8, 0x1c, 0xa7, 0x57, 0x57, 0x27, 0x39, 0xe7, 0xf7, 0xb2, 0x29, 0xd3, 0x66,
	0x4c, 0x22, 0xf2, 0x23, 0x58, 0x52, 0xfe, 0xe2, 0xf3, 0xf0, 0x20, 0x1c, 0x71, 0xe5, 0x45, 0xf9,
	0xa4, 0xfc, 0xb9, 0xc9, 0xa4, 0x25, 0x2c, 0x79, 0x0f, 0x1a, 0x01, 0x73, 0xcf, 0x58, 0x22, 0x67,
	0x5b, 0x25, 0x87, 0xd2, 0x2c, 0xf2, 0x43, 0xe8, 0x0a, 0xc3, 0x7d, 0xd4, 0xb0, 0xeb, 0x0a, 0xd7,
	0x2a, 0x22, 0x9d, 0x73, 0xe8, 0xe4, 0xfe, 0xcb, 0x8f, 0xc9, 0xa7, 0xd0, 0x2d, 0x68, 0xa0, 0xfd,
	0xf8, 0x72, 0x65, 0x8b, 0x50, 0xf2, 0x10, 0x9a, 0x01, 0xf7, 0xdc, 0xe0, 0xc9, 0x59, 0xaa, 0x6d,
	0xda, 0x62, 0x3e, 0x61, 0xd3, 0x2f, 0xdd, 0x60, 0xc2, 0x68, 0x06, 0x70, 0xfe, 0x2c, 0x47, 0x04,
	0xd2, 0x4c, 0xca, 0x15, 0xd9, 0x2b, 0x74, 0x8c, 0x90, 0xb1, 0xe1, 0x1e, 0x13, 0xae, 0x1f, 0xc8,
	0x2f, 0x37, 0xa9, 0x41, 0xc1, 0x36, 0x5e, 0x8e, 0x19, 0x77, 0x67, 0x3c, 0x6f, 0x86, 0x8e, 0x79,
	0x9e, 0x85, 0x43, 0x13, 0xa9, 0x2a, 0x6b, 0x89, 0x5a, 0x1a, 0x66, 0xd6, 0xca, 0xc3, 0xcc, 0xab,
	0x6b, 0xac, 0x73, 0x88, 0x4f, 0x71, 0xf3, 0x00, 0x6f, 0x7a, 0xd9, 0xce, 0x57, 0x72, 0x10, 0xb5,
	0xcf, 0x84, 0x37, 0x96, 0x5b, 0x3e, 0xf5, 0x13, 0xf1, 0xe6, 0xa5, 0x0c, 0x5f, 0x53, 0x31, 0x7b,
	0x65, 0xd6, 0x47, 0x69, 0x8b, 0x26, 0x2d, 0x93, 0x71, 0xc7, 0x98, 0xbd, 0x7a, 0xea, 0x0a, 0x96,
	0x88, 0x3c, 0x7d, 0x34, 0x69, 0x89, 0x8a, 0xb9, 0x81, 0x85, 0x43, 0x6d, 0x57, 0xf5, 0xde, 0xcf,
	0x09, 0xce, 0xbf, 0x65, 0x04, 0x64, 0x47, 0xbd, 0x26, 0x93, 0x18, 0xb1, 0x57, 0xbd, 0xaa, 0xa0,
	0x58, 0x73, 0x66, 0xaf, 0xf5, 0x39, 0xf3, 0xfc, 0xc6, 0x6b, 0xcd, 0xf3, 0x17, 0xaf, 0x48, 0x34,
	0x73, 0x87, 0x63, 0xea, 0xb7, 0xac, 0x66, 0xfa, 0x5b, 0x96, 0xf3, 0x3e, 0x90, 0xc7, 0xe5, 0x79,
	0xc3, 0x9e, 0x6c, 0xd1, 0xf6, 0x74, 0x2b, 0x52, 0x3d, 0xd8, 0x73, 0x0e, 0xe0, 0xdb, 0x3a, 0xe8,
	0x2e, 0x01, 0x13, 0xa3, 0x84, 0x5b, 0xba, 0x5e, 0xdb, 0xc5, 0x7a, 0x6d, 0x65, 0xc5, 0x79, 0xab,
	0x09, 0x0d, 0xf5, 0xeb, 0xf8, 0xee, 0xc7, 0x2f, 0x37, 0x8f, 0x7d, 0x31, 0x9e, 0x0c, 0x36, 0x3c,
	0x7e, 0xba, 0xb9, 0xbd, 0xed, 0x85, 0x9b, 0x51, 0x30, 0x39, 0xf6, 0xb3, 0x3f, 0x43, 0x37, 0x8a,
	0x36, 0x15, 0x78, 0x53, 0x9a, 0x64, 0xd0, 0x90, 0xbf, 0x96, 0x6f, 0xff, 0x27, 0x00, 0x00, 0xff,
	0xff, 0x16, 0x2e, 0xf8, 0xd9, 0x61, 0x1f, 0x00, 0x00,
}
